@DECK_FILTER_PAGE(EX切り替え)
#DIM DYNAMIC EX切り替え
#DIM DYNAMIC カウンタ
#DIM DYNAMIC 필터数
$INPUT_LOOP
CUSTOMDRAWLINE —
PRINTL 필터 메뉴
CUSTOMDRAWLINE —
PRINTL

PRINTFORML ――――카드종류――――
PRINTL
SETCOLOR C_BASM_BR
SIF 필터条件종류:2 == 2
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　 통상 　　】",2
RESETCOLOR

SETCOLOR C_MONS_BR
SIF 필터条件종류:1 == 소환時
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　 효과 　　】",1
RESETCOLOR

SETCOLOR C_GISK_BLUE
SIF 필터条件종류:3 == 3
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　 의식 　　】",3
RESETCOLOR

PRINTL

; SETCOLOR C_MAGIC_G
; SIF 필터条件종류:20 == 20
; 	SETCOLOR C_YELLOW
; PRINTBUTTON "【　　 마법 　　】",20
; RESETCOLOR

SETCOLOR C_MAGIC_G
; SIF 필터条件종류:20 == 20
; 	SETCOLOR C_YELLOW
PRINTBUTTON "【　 마법전반 　】",20
RESETCOLOR

SETCOLOR C_MAGIC_G
SIF 필터条件종류:21 == 21
	SETCOLOR C_YELLOW
PRINTBUTTON "【　 일반마법 　】",21
RESETCOLOR

SETCOLOR C_MAGIC_G
SIF 필터条件종류:22 == 22
	SETCOLOR C_YELLOW
PRINTBUTTON "【　 장착마법 　】",22
RESETCOLOR

SETCOLOR C_MAGIC_G
SIF 필터条件종류:23 == 23
	SETCOLOR C_YELLOW
PRINTBUTTON "【　 속공마법 　】",23
RESETCOLOR

SETCOLOR C_MAGIC_G
SIF 필터条件종류:24 == 24
	SETCOLOR C_YELLOW
PRINTBUTTON "【　 지속마법 　】",24
RESETCOLOR

SETCOLOR C_MAGIC_G
SIF 필터条件종류:25 == 25
	SETCOLOR C_YELLOW
PRINTBUTTON "【　 필드마법 　】",25
RESETCOLOR
PRINTL

; SETCOLOR C_TRAP_PUR
; SIF 필터条件종류:30 == 30
; 	SETCOLOR C_YELLOW
; PRINTBUTTON "【　　　함정　　　】",30
; RESETCOLOR

SETCOLOR C_TRAP_PUR
; SIF 필터条件종류:30 == 30
; 	SETCOLOR C_YELLOW
PRINTBUTTON "【　 함정전반 　】",30
RESETCOLOR

SETCOLOR C_TRAP_PUR
SIF 필터条件종류:31 == 31
	SETCOLOR C_YELLOW
PRINTBUTTON "【　 일반함정 　】",31
RESETCOLOR

SETCOLOR C_TRAP_PUR
SIF 필터条件종류:32 == 32
	SETCOLOR C_YELLOW
PRINTBUTTON "【　 지속함정 　】",32
RESETCOLOR
PRINTL

SETCOLOR C_FUSE_PUR
SIF 필터条件종류:4 == 4
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　 융합 　　】",4
RESETCOLOR

SETCOLOR C_SYN_WHITE
SIF 필터条件종류:5 == 마함起動
	SETCOLOR C_YELLOW
PRINTBUTTON "【　  싱크로  　】",5
RESETCOLOR

SETCOLOR C_XYZ_BLACK
SIF 필터条件종류:6 == 6
	SETCOLOR C_YELLOW
PRINTBUTTON "【　  엑시즈  　】",6
RESETCOLOR

SETCOLOR C_LINK_BLUE
SIF 필터条件종류:7 == 링크
	SETCOLOR C_YELLOW
PRINTBUTTON "【　 ＬＩＮＫ 　】",7
RESETCOLOR

SETCOLOR C_PSY_RED
SIF 필터条件종류:9 == 초차원
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　초차원　　】",9
RESETCOLOR

PRINTL
PRINTL
PRINTFORML ――――카드 속성――――
PRINTL

SETCOLOR C_LIGHT_T
SIF 필터条件속성:1 == 1
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　빛속성　　】",101
RESETCOLOR

SETCOLOR C_DARK_T
SIF 필터条件속성:2 == 2
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　어둠속성　　】",102
RESETCOLOR

SETCOLOR C_GROUND_T
SIF 필터条件속성:3 == 3
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　땅속성　　】",103
RESETCOLOR

SETCOLOR C_WATER_T
SIF 필터条件속성:4 == 4
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　물속성　　】",104
RESETCOLOR
;PRINTL
SETCOLOR C_FIRE_T
SIF 필터条件속성:5 == 5
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　화염속성　　】",105
RESETCOLOR

SETCOLOR C_WIND_T
SIF 필터条件속성:6 == 6
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　바람속성　　】",106
RESETCOLOR
PRINTL
PRINTL
PRINTFORML ――――카드종족――――
PRINTL
SIF 필터条件종족:1 == 1
	SETCOLOR C_YELLOW
PRINTBUTTON "【　  마법사족  　】",201
RESETCOLOR
SIF 필터条件종족:2 == 2
	SETCOLOR C_YELLOW

PRINTBUTTON "【　  드래곤족  　】",202
RESETCOLOR
SIF 필터条件종족:3 == 3
	SETCOLOR C_YELLOW
PRINTBUTTON "【   언데드족 　】",203
RESETCOLOR
SIF 필터条件종족:4 == 4
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　전사족　　】",204
RESETCOLOR
PRINTL
SIF 필터条件종족:5 == 5
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　 기계족 　　】",205
RESETCOLOR
SIF 필터条件종족:6 == 6
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　 야수족　　 】",206
RESETCOLOR
SIF 필터条件종족:7 == 7
	SETCOLOR C_YELLOW
PRINTBUTTON "【　비행야수족　】",207
RESETCOLOR
SIF 필터条件종족:8 == 8
	SETCOLOR C_YELLOW
PRINTBUTTON "【　비늘야수족　】",208
RESETCOLOR
PRINTL

SIF 필터条件종족:9 == 9
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　 악마족 　　】",209
RESETCOLOR
SIF 필터条件종족:10 == 10
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　 천사족 　　】",210
RESETCOLOR
SIF 필터条件종족:11 == 11
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　곤충족　　】",211
RESETCOLOR
SIF 필터条件종족:12 == 12
	SETCOLOR C_YELLOW
PRINTBUTTON "【　원소정령족　】",212
RESETCOLOR
PRINTL
SIF 필터条件종족:13 == 13
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　 식물족 　　】",213
RESETCOLOR
SIF 필터条件종족:14 == 14
	SETCOLOR C_YELLOW
PRINTBUTTON "【　  사이킥족  　】",214
RESETCOLOR
SIF 필터条件종족:15 == 15
	SETCOLOR C_YELLOW
PRINTBUTTON "【　사이버스족　】",215
RESETCOLOR
SIF 필터条件종족:16 == 16
	SETCOLOR C_YELLOW
PRINTBUTTON "【　바다생물족　】",216
RESETCOLOR
PRINTL
SIF 필터条件종족:17 == 17
	SETCOLOR C_YELLOW
PRINTBUTTON "【　　미확인족　　】",217
RESETCOLOR
PRINTL


PRINTL
PRINTFORML ――――레벨/링크/랭크――――
PRINTL
SIF 필터条件レベル:1 == 1
	SETCOLOR C_YELLOW
PRINTBUTTON "【　１　】",301
RESETCOLOR
SIF 필터条件レベル:2 == 2
	SETCOLOR C_YELLOW
PRINTBUTTON "【　２　】",302
RESETCOLOR
SIF 필터条件レベル:3 == 3
	SETCOLOR C_YELLOW
PRINTBUTTON "【　３　】",303
RESETCOLOR
SIF 필터条件レベル:4 == 4
	SETCOLOR C_YELLOW
PRINTBUTTON "【　４　】",304
RESETCOLOR

SIF 필터条件レベル:5 == 5
	SETCOLOR C_YELLOW
PRINTBUTTON "【　５　】",305
RESETCOLOR
SIF 필터条件レベル:6 == 6
	SETCOLOR C_YELLOW
PRINTBUTTON "【　６　】",306
RESETCOLOR
PRINTL
SIF 필터条件レベル:7 == 7
	SETCOLOR C_YELLOW
PRINTBUTTON "【　７　】",307
RESETCOLOR
SIF 필터条件レベル:8 == 8
	SETCOLOR C_YELLOW
PRINTBUTTON "【　８　】",308
RESETCOLOR
SIF 필터条件レベル:9 == 9
	SETCOLOR C_YELLOW
PRINTBUTTON "【　９　】",309
RESETCOLOR

SIF 필터条件レベル:10 == 10
	SETCOLOR C_YELLOW
PRINTBUTTON "【　10　】",310
RESETCOLOR


SIF 필터条件レベル:11 == 11
	SETCOLOR C_YELLOW
PRINTBUTTON "【　11　】",311
RESETCOLOR
SIF 필터条件レベル:12 == 12
	SETCOLOR C_YELLOW
PRINTBUTTON "【　12　】",312
RESETCOLOR
PRINTL


PRINTL
PRINTFORML ――――분할카드종류――――
PRINTL

SIF 필터条件分割 == 효과なし
	SETCOLOR C_YELLOW
PRINTBUTTON "【　효과없음　】",340
RESETCOLOR

SIF 필터条件分割 == デュアル
	SETCOLOR C_YELLOW
PRINTBUTTON "【　 듀얼 　】",341
RESETCOLOR

SIF 필터条件分割 == 유니온
	SETCOLOR C_YELLOW
PRINTBUTTON "【　유니온　】",342
RESETCOLOR

SIF 필터条件分割 == 펜듈럼
	SETCOLOR C_YELLOW
PRINTBUTTON "【　펜듈럼　】",343
RESETCOLOR


SIF 필터条件튜너 == 1
	SETCOLOR C_YELLOW
PRINTBUTTON "【　 튜너 　】",320
RESETCOLOR


PRINTL
PRINTFORML ――――레어리티――――
PRINTL

SETCOLOR C_ROYAL_BLUE
SIF 필터条件レア度:4 == 4
	SETCOLOR C_YELLOW
PRINTBUTTON "【ULR】",334
RESETCOLOR

SETCOLOR C_GOLD
SIF 필터条件レア度:3 == 3
	SETCOLOR C_YELLOW
PRINTBUTTON "【SPR】",333
RESETCOLOR

SETCOLOR C_SILVER
SIF 필터条件レア度:2 == 2
	SETCOLOR C_YELLOW
PRINTBUTTON "【 R 】",332
RESETCOLOR

SETCOLOR C_SILVER
SIF 필터条件レア度:1 == 1
	SETCOLOR C_YELLOW
PRINTBUTTON "【CMN】",331
RESETCOLOR

SETCOLOR C_P_PURPLE
SIF 필터条件レア度:5 == 5
	SETCOLOR C_YELLOW
PRINTBUTTON "【ERA】",335
RESETCOLOR



PRINTL
PRINTFORML ――――그 외――――
PRINTL

SIF 필터条件성별 == 1
	SETCOLOR C_YELLOW
PRINTBUTTON "【성별：암】",321
RESETCOLOR

SIF 필터条件성별 == 2
	SETCOLOR C_YELLOW
PRINTBUTTON "【성별：수】",322
RESETCOLOR

SIF 필터条件성별 == 3
	SETCOLOR C_YELLOW
PRINTBUTTON "【성별：외】",323
RESETCOLOR

SIF 필터条件화상 == 1
	SETCOLOR C_YELLOW
PRINTBUTTON "【화상：유】",326
RESETCOLOR

IF 필터条件外部 == 1
	SETCOLOR C_YELLOW
	PRINTBUTTON "【외부자만】",327
ELSEIF 필터条件外部 == 2
	SETCOLOR C_YELLOW
	PRINTBUTTON "【외부자 없이】",327
ELSE
	PRINTBUTTON "【외부자 필터】",327
ENDIF
RESETCOLOR

PRINTL


PRINTL
PRINTFORML ――――카테고리 검색――――
SUBSTRING 필터条件カテゴリ, 0, 18
PRINTBUTTON @"【%RESULTS,19,LEFT%】", 7777
PRINTL
PRINTL
CUSTOMDRAWLINE —
PRINTFORM %"",5%
PRINTBUTTON @"【 리셋 】",8888
PRINTFORM %"",10%
PRINTBUTTON "【　돌아간다　】",9999
PRINTL
CUSTOMDRAWLINE —
BINPUT
IF RESULT <= 100
	IF RESULT == 20 ;마법全般
		필터数 = 0
		FOR カウンタ, 21, 26
			SIF 필터条件종류:カウンタ != 0
				필터数++
		NEXT
		IF 필터数 == 5
			FOR カウンタ, 21, 26
				필터条件종류:カウンタ = 0
			NEXT
		ELSE
			FOR カウンタ, 21, 26
				필터条件종류:カウンタ = カウンタ
			NEXT
		ENDIF
	ELSEIF RESULT == 30 ;함정全般
		필터数 = 0
		FOR カウンタ, 31, 33
			SIF 필터条件종류:カウンタ != 0
				필터数++
		NEXT
		IF 필터数 == 2
			FOR カウンタ, 31, 33
				필터条件종류:カウンタ = 0
			NEXT
		ELSE
			FOR カウンタ, 31, 33
				필터条件종류:カウンタ = カウンタ
			NEXT
		ENDIF
	ELSE
		IF 필터条件종류:RESULT == RESULT
			필터条件종류:RESULT = 0
			필터条件종류:0 = 0
			FOR カウンタ,1,15
				SIF 필터条件종류:カウンタ != 0
					필터条件종류:0 = 999
			NEXT
		ELSE
			필터条件종류:RESULT = RESULT
			필터条件종류:0 = 999
		ENDIF
	ENDIF
ELSEIF INRANGE(RESULT, 100,200)
	RESULT -= 100
	IF 필터条件속성:RESULT == RESULT
		필터条件속성:RESULT = 0
		필터条件속성:0 = 0
		FOR カウンタ,1,15
			SIF 필터条件속성:カウンタ != 0
				필터条件속성:0 = 999
		NEXT
	ELSE
		필터条件속성:RESULT = RESULT
		필터条件속성:0 = 999
	ENDIF
ELSEIF INRANGE(RESULT, 200,300)
	RESULT -= 200
	IF 필터条件종족:RESULT == RESULT
		필터条件종족:RESULT = 0
		필터条件종족:0 = 0
		FOR カウンタ,1,20
			SIF 필터条件종족:カウンタ != 0
				필터条件종족:0 = 999
		NEXT
	ELSE
		필터条件종족:RESULT = RESULT
		필터条件종족:0 = 999
	ENDIF
ELSEIF INRANGE(RESULT, 300,319)
	RESULT -= 300
	IF 필터条件レベル:RESULT == RESULT
		필터条件レベル:RESULT = 0
		필터条件レベル:0 = 0
		FOR カウンタ,1,15
			SIF 필터条件レベル:カウンタ != 0
				필터条件レベル:0 = 999
		NEXT
	ELSE
		필터条件レベル:RESULT = RESULT
		필터条件レベル:0 = 999
	ENDIF
ELSEIF RESULT == 320
	필터条件튜너 ^= 1


ELSEIF INRANGE(RESULT, 321,325)
	RESULT -= 320
	IF 필터条件성별 != RESULT
		필터条件성별 = RESULT
	ELSE
		필터条件성별 = 0
	ENDIF
ELSEIF RESULT == 326
	필터条件화상 ^= 1
ELSEIF RESULT == 327
	IF 필터条件外部 == 0
		필터条件外部 = 1
	ELSEIF 필터条件外部 == 1
		필터条件外部 = 2
	ELSEIF 필터条件外部 == 2
		필터条件外部 = 0
	ENDIF
ELSEIF INRANGE(RESULT, 331,339)
	RESULT -= 330
	IF 필터条件レア度:RESULT == RESULT
		필터条件レア度:RESULT = 0
		필터条件レア度:0 = 0
		FOR カウンタ,1,10
			SIF 필터条件レア度:カウンタ != 0
				필터条件レア度:0 = 999
		NEXT
	ELSE
		필터条件レア度:RESULT = RESULT
		필터条件レア度:0 = 999
	ENDIF

ELSEIF INRANGE(RESULT, 340,350)
	SELECTCASE RESULT
		CASE 340
			필터条件分割 = 효과なし
		CASE 341
			필터条件分割 = デュアル
		CASE 342
			필터条件分割 = 유니온
		CASE 343
			필터条件分割 = 펜듈럼
	ENDSELECT
ELSEIF RESULT == 8888
	CALL DECK_FILTER_RESET
	
ELSEIF RESULT == 7777
	PRINTL 
	PRINT 카테고리명을 입력해주세요：
	PRINTBUTTON @"【돌아간다】", ""
	PRINTL 
	PRINTL 
	INPUTS
	IF RESULTS == ""
		필터条件カテゴリ = 
	ELSE
		필터条件カテゴリ = %RESULTS%
	ENDIF

ELSEIF RESULT == 9999
	RETURN 0
ENDIF
GOTO INPUT_LOOP

@DECK_SORT_PAGE

$INPUT_LOOP
CUSTOMDRAWLINE —
PRINTFORM %"",2%
PRINTL 정렬 순：
CUSTOMDRAWLINE —

PRINT 　【공격순】　:
SIF ソート方式 == "攻撃力" && ソート順番 == 1
	SETCOLOR C_GREEN
PRINTBUTTON @"【　오름순　】", 1
RESETCOLOR
SIF ソート方式 == "攻撃力" && ソート順番 == 0
	SETCOLOR C_GREEN
PRINTBUTTON @"【　내림순　】", 2
RESETCOLOR
PRINTL

PRINT 　【수비순】　:
SIF ソート方式 == "守備力" && ソート順番 == 1
	SETCOLOR C_GREEN
PRINTBUTTON @"【　오름순　】", 3
RESETCOLOR
SIF ソート方式 == "守備力" && ソート順番 == 0
	SETCOLOR C_GREEN
PRINTBUTTON @"【　내림순　】", 4
RESETCOLOR
PRINTL
PRINT 　【종족순】　:
SIF ソート方式 == "종족" && ソート順番 == 1
	SETCOLOR C_GREEN
PRINTBUTTON @"【　오름순　】", 5
RESETCOLOR
SIF ソート方式 == "종족" && ソート順番 == 0
	SETCOLOR C_GREEN
PRINTBUTTON @"【　내림순　】", 6
RESETCOLOR
PRINTL 
PRINT 　【속성순】　:
SIF ソート方式 == "속성" && ソート順番 == 1
	SETCOLOR C_GREEN
PRINTBUTTON @"【　오름순　】", 7
RESETCOLOR
SIF ソート方式 == "속성" && ソート順番 == 0
	SETCOLOR C_GREEN
PRINTBUTTON @"【　내림순　】", 8
RESETCOLOR
PRINTL 

PRINT 　【레벨순】　:
SIF ソート方式 == "レベル" && ソート順番 == 1
	SETCOLOR C_GREEN
PRINTBUTTON @"【　오름순　】", 9
RESETCOLOR
SIF ソート方式 == "レベル" && ソート順番 == 0
	SETCOLOR C_GREEN
PRINTBUTTON @"【　내림순　】", 10
RESETCOLOR
PRINTL 


PRINT 　【레어도순】:
SIF ソート方式 == "レア度" && ソート順番 == 1
	SETCOLOR C_GREEN
PRINTBUTTON @"【　오름순　】", 11
RESETCOLOR
SIF ソート方式 == "レア度" && ソート順番 == 0
	SETCOLOR C_GREEN
PRINTBUTTON @"【　내림순　】", 12
RESETCOLOR
PRINTL 


PRINT 　【추가일순】:
SIF ソート方式 == "추가日" && ソート順番 == 1
	SETCOLOR C_GREEN
PRINTBUTTON @"【　오름순　】", 13
RESETCOLOR
SIF ソート方式 == "추가日" && ソート順番 == 0
	SETCOLOR C_GREEN
PRINTBUTTON @"【　내림순　】", 14
RESETCOLOR
PRINTL 




PRINTL 	
CUSTOMDRAWLINE —
PRINTFORM %"",2%
PRINTBUTTON @"【　돌아간다　】", 9999
PRINTFORM %"",10%
PRINTBUTTON @"【리셋】", 100
PRINTL
CUSTOMDRAWLINE —
BINPUT
IF RESULT == 1
	ソート方式 = 攻撃力
	ソート順番 = 1
ELSEIF RESULT == 2
	ソート方式 = 攻撃力
	ソート順番 = 0
ELSEIF RESULT == 3
	ソート方式 = 守備力
	ソート順番 = 1
ELSEIF RESULT == 4
	ソート方式 = 守備力
	ソート順番 = 0
ELSEIF RESULT == 5
	ソート方式 = 종족
	ソート順番 = 1
ELSEIF RESULT == 6
	ソート方式 = 종족
	ソート順番 = 0
ELSEIF RESULT == 7
	ソート方式 = 속성
	ソート順番 = 1
ELSEIF RESULT == 8
	ソート方式 = 속성
	ソート順番 = 0
ELSEIF RESULT == 9
	ソート方式 = レベル
	ソート順番 = 1
ELSEIF RESULT == 10
	ソート方式 = レベル
	ソート順番 = 0

ELSEIF RESULT == 11
	ソート方式 = レア度
	ソート順番 = 1
ELSEIF RESULT == 12
	ソート方式 = レア度
	ソート順番 = 0

ELSEIF RESULT == 13
	ソート方式 = 추가日
	ソート順番 = 1
ELSEIF RESULT == 14
	ソート方式 = 추가日
	ソート順番 = 0


ELSEIF RESULT == 100
	ソート方式 = 
	ソート順番 = 0
ELSEIF RESULT == 9999
	RETURN 0
ENDIF
GOTO INPUT_LOOP



; 컬렉션_編集読み込み
@COLLECTION_LOAD(EX切り替え)
#DIM DYNAMIC カウンタ
#DIM DYNAMIC カウンタB
#DIM DYNAMIC EX切り替え
#DIM DYNAMIC ALLリスト,10000
#DIM DYNAMIC ALLカウンタ


#DIM DYNAMIC NRMリスト,10000
#DIM DYNAMIC NRMカウンタ
#DIM DYNAMIC EFFリスト,10000
#DIM DYNAMIC EFFカウンタ
#DIM DYNAMIC RITリスト,10000
#DIM DYNAMIC RITカウンタ
#DIM DYNAMIC MAGリスト,10000
#DIM DYNAMIC MAGカウンタ
#DIM DYNAMIC TRPリスト,10000
#DIM DYNAMIC TRPカウンタ

#DIM DYNAMIC ULRリスト,10000
#DIM DYNAMIC ULRカウンタ
#DIM DYNAMIC SPRリスト,10000
#DIM DYNAMIC SPRカウンタ
#DIM DYNAMIC RARリスト,10000
#DIM DYNAMIC RARカウンタ
#DIM DYNAMIC CMNリスト,10000
#DIM DYNAMIC CMNカウンタ
#DIM DYNAMIC ERAリスト,10000
#DIM DYNAMIC ERAカウンタ


#DIM DYNAMIC 攻撃力リスト,10000

#DIM DYNAMIC FUSリスト,10000
#DIM DYNAMIC FUSカウンタ
#DIM DYNAMIC SYNリスト,10000
#DIM DYNAMIC SYNカウンタ
#DIM DYNAMIC XYZリスト,10000
#DIM DYNAMIC XYZカウンタ
#DIM DYNAMIC LINリスト,10000
#DIM DYNAMIC LINカウンタ
#DIM DYNAMIC PSYリスト,10000
#DIM DYNAMIC PSYカウンタ


VARSET 컬렉션_編集,-1
VARSET EX컬렉션_編集,-1



IF EX切り替え == 0
	FOR カウンタ,150,100000
		VARSET RESULT
		VARSET RESULTS
		
		SIF カウンタ == 25000
			CALL LOADING_SCREEN_SPLIT(1)
		SIF カウンタ == 50000
			CALL LOADING_SCREEN_SPLIT(2)
		SIF カウンタ == 75000
			CALL LOADING_SCREEN_SPLIT(3)
		TRYCALLFORM CARDNAME_{カウンタ}("名前")
		SIF RESULTS == ""
			CONTINUE
		TRYCALLFORM CARD_{カウンタ}("トークン")
		SIF RESULT == 1
			CONTINUE
		CALL DECK_FILTER(カウンタ)
		SIF RESULT != 1
			CONTINUE

		VARSET RESULT
		TRYCALLFORM CARD_{カウンタ}("종류")
		IF (RESULT < 4 || RESULT > 10 ) && RESULT != 0
			IF RESULT == 通常モン
				NRMリスト:NRMカウンタ = カウンタ
				NRMカウンタ++
			ELSEIF RESULT == 효과モン
				EFFリスト:EFFカウンタ = カウンタ
				EFFカウンタ++
			ELSEIF RESULT == 의식
				RITリスト:RITカウンタ = カウンタ
				RITカウンタ++
			ELSEIF INRANGE(RESULT, 20, 29)
				MAGリスト:MAGカウンタ = カウンタ
				MAGカウンタ++
			ELSEIF RESULT >= 함정全般
				TRPリスト:TRPカウンタ = カウンタ
				TRPカウンタ++
			ENDIF
			ALLリスト:ALLカウンタ = カウンタ
			ALLカウンタ++
		ELSE
			CONTINUE
		ENDIF
	NEXT
	IF ソート方式 != ""
		FOR カウンタ,0,ALLカウンタ
			IF ソート方式 == "レア度"
				CALL CARDPRICE(ALLリスト:カウンタ,"レア度")
			ELSE
				CALLFORM CARD_{ALLリスト:カウンタ},ソート方式
			ENDIF
			ALLリスト:カウンタ += RESULT * 10000000
		NEXT
		IF ソート順番 == 1
			ARRAYSORT ALLリスト,FORWARD,0,ALLカウンタ
		ELSE
			ARRAYSORT ALLリスト,BACK
		ENDIF
		FOR カウンタ,0,ALLカウンタ
			ALLリスト:カウンタ = ALLリスト:カウンタ % 10000000 
		NEXT

		FOR カウンタ,0,NRMカウンタ
			CALLFORM CARD_{NRMリスト:カウンタ},ソート方式
			NRMリスト:カウンタ += RESULT * 10000000
		NEXT
		IF ソート順番 == 1
			ARRAYSORT NRMリスト,FORWARD,0,NRMカウンタ
		ELSE
			ARRAYSORT NRMリスト,BACK
		ENDIF
		FOR カウンタ,0,NRMカウンタ
			NRMリスト:カウンタ = NRMリスト:カウンタ % 10000000 
		NEXT

		FOR カウンタ,0,EFFカウンタ
			CALLFORM CARD_{EFFリスト:カウンタ},ソート方式
			EFFリスト:カウンタ += RESULT * 10000000
		NEXT
		IF ソート順番 == 1
			ARRAYSORT EFFリスト,FORWARD,0,EFFカウンタ
		ELSE
			ARRAYSORT EFFリスト,BACK
		ENDIF
		FOR カウンタ,0,EFFカウンタ
			EFFリスト:カウンタ = EFFリスト:カウンタ % 10000000 
		NEXT

		FOR カウンタ,0,RITカウンタ
			CALLFORM CARD_{RITリスト:カウンタ},ソート方式
			RITリスト:カウンタ += RESULT * 10000000
		NEXT
		IF ソート順番 == 1
			ARRAYSORT RITリスト,FORWARD,0,RITカウンタ
		ELSE
			ARRAYSORT RITリスト,BACK
		ENDIF
		FOR カウンタ,0,RITカウンタ
			RITリスト:カウンタ = RITリスト:カウンタ % 10000000 
		NEXT

		FOR カウンタ,0,MAGカウンタ
			CALLFORM CARD_{MAGリスト:カウンタ},ソート方式
			MAGリスト:カウンタ += RESULT * 10000000
		NEXT
		IF ソート順番 == 1
			ARRAYSORT MAGリスト,FORWARD,0,MAGカウンタ
		ELSE
			ARRAYSORT MAGリスト,BACK
		ENDIF
		FOR カウンタ,0,MAGカウンタ
			MAGリスト:カウンタ = MAGリスト:カウンタ % 10000000 
		NEXT

		FOR カウンタ,0,TRPカウンタ
			CALLFORM CARD_{TRPリスト:カウンタ},ソート方式
			TRPリスト:カウンタ += RESULT * 10000000
		NEXT
		IF ソート順番 == 1
			ARRAYSORT TRPリスト,FORWARD,0,TRPカウンタ
		ELSE
			ARRAYSORT TRPリスト,BACK
		ENDIF
		FOR カウンタ,0,TRPカウンタ
			TRPリスト:カウンタ = TRPリスト:カウンタ % 10000000 
		NEXT

	ENDIF

	IF レア度グループ化 == 1
		IF 종류グループ化 == 1
			FOR カウンタ,0,ALLカウンタ
				CALL CARDPRICE(ALLリスト:カウンタ,"レア度")
				SELECTCASE RESULT
				CASE 4
					ULRリスト:ULRカウンタ = ALLリスト:カウンタ
					ULRカウンタ++
				CASE 3
					SPRリスト:SPRカウンタ = ALLリスト:カウンタ
					SPRカウンタ++
				CASE 2
					RARリスト:RARカウンタ = ALLリスト:カウンタ
					RARカウンタ++
				CASE 1
					CMNリスト:CMNカウンタ = ALLリスト:カウンタ
					CMNカウンタ++
				CASE 5
					ERAリスト:ERAカウンタ = ALLリスト:カウンタ
					ERAカウンタ++
				ENDSELECT
			NEXT
		ELSE
			FOR カウンタ,0,NRMカウンタ
				CALL CARDPRICE(NRMリスト:カウンタ,"レア度")
				SELECTCASE RESULT
				CASE 4
					ULRリスト:ULRカウンタ = NRMリスト:カウンタ
					ULRカウンタ++
				CASE 3
					SPRリスト:SPRカウンタ = NRMリスト:カウンタ
					SPRカウンタ++
				CASE 2
					RARリスト:RARカウンタ = NRMリスト:カウンタ
					RARカウンタ++
				CASE 1
					CMNリスト:CMNカウンタ = NRMリスト:カウンタ
					CMNカウンタ++
				CASE 5
					ERAリスト:ERAカウンタ = NRMリスト:カウンタ
					ERAカウンタ++
				ENDSELECT
			NEXT
			FOR カウンタ,0,EFFカウンタ
				CALL CARDPRICE(EFFリスト:カウンタ,"レア度")
				SELECTCASE RESULT
				CASE 4
					ULRリスト:ULRカウンタ = EFFリスト:カウンタ
					ULRカウンタ++
				CASE 3
					SPRリスト:SPRカウンタ = EFFリスト:カウンタ
					SPRカウンタ++
				CASE 2
					RARリスト:RARカウンタ = EFFリスト:カウンタ
					RARカウンタ++
				CASE 1
					CMNリスト:CMNカウンタ = EFFリスト:カウンタ
					CMNカウンタ++
				CASE 5
					ERAリスト:ERAカウンタ = EFFリスト:カウンタ
					ERAカウンタ++
				ENDSELECT
			NEXT
			FOR カウンタ,0,RITカウンタ
				CALL CARDPRICE(RITリスト:カウンタ,"レア度")
				SELECTCASE RESULT
				CASE 4
					ULRリスト:ULRカウンタ = RITリスト:カウンタ
					ULRカウンタ++
				CASE 3
					SPRリスト:SPRカウンタ = RITリスト:カウンタ
					SPRカウンタ++
				CASE 2
					RARリスト:RARカウンタ = RITリスト:カウンタ
					RARカウンタ++
				CASE 1
					CMNリスト:CMNカウンタ = RITリスト:カウンタ
					CMNカウンタ++
				CASE 5
					ERAリスト:ERAカウンタ = RITリスト:カウンタ
					ERAカウンタ++
				ENDSELECT
			NEXT
			FOR カウンタ,0,MAGカウンタ
				CALL CARDPRICE(MAGリスト:カウンタ,"レア度")
				SELECTCASE RESULT
				CASE 4
					ULRリスト:ULRカウンタ = MAGリスト:カウンタ
					ULRカウンタ++
				CASE 3
					SPRリスト:SPRカウンタ = MAGリスト:カウンタ
					SPRカウンタ++
				CASE 2
					RARリスト:RARカウンタ = MAGリスト:カウンタ
					RARカウンタ++
				CASE 1
					CMNリスト:CMNカウンタ = MAGリスト:カウンタ
					CMNカウンタ++
				CASE 5
					ERAリスト:ERAカウンタ = MAGリスト:カウンタ
					ERAカウンタ++
				ENDSELECT
			NEXT
			FOR カウンタ,0,TRPカウンタ
				CALL CARDPRICE(TRPリスト:カウンタ,"レア度")
				SELECTCASE RESULT
				CASE 4
					ULRリスト:ULRカウンタ = TRPリスト:カウンタ
					ULRカウンタ++
				CASE 3
					SPRリスト:SPRカウンタ = TRPリスト:カウンタ
					SPRカウンタ++
				CASE 2
					RARリスト:RARカウンタ = TRPリスト:カウンタ
					RARカウンタ++
				CASE 1
					CMNリスト:CMNカウンタ = TRPリスト:カウンタ
					CMNカウンタ++
				CASE 5
					ERAリスト:ERAカウンタ = TRPリスト:カウンタ
					ERAカウンタ++
				ENDSELECT
			NEXT

		ENDIF

		FOR カウンタ,0,ULRカウンタ
			컬렉션_編集:カウンタB = ULRリスト:カウンタ
			カウンタB++
		NEXT
		FOR カウンタ,0,SPRカウンタ
			컬렉션_編集:カウンタB = SPRリスト:カウンタ
			カウンタB++
		NEXT
		FOR カウンタ,0,RARカウンタ
			컬렉션_編集:カウンタB = RARリスト:カウンタ
			カウンタB++
		NEXT
		FOR カウンタ,0,CMNカウンタ
			컬렉션_編集:カウンタB = CMNリスト:カウンタ
			カウンタB++
		NEXT
		FOR カウンタ,0,ERAカウンタ
			컬렉션_編集:カウンタB = ERAリスト:カウンタ
			カウンタB++
		NEXT
	ELSE
		IF 종류グループ化 == 1
			FOR カウンタ,0,ALLカウンタ
				컬렉션_編集:カウンタB = ALLリスト:カウンタ
				カウンタB++
			NEXT
		ELSE
			FOR カウンタ,0,NRMカウンタ
				컬렉션_編集:カウンタB = NRMリスト:カウンタ
				カウンタB++
			NEXT
			FOR カウンタ,0,EFFカウンタ
				컬렉션_編集:カウンタB = EFFリスト:カウンタ
				カウンタB++
			NEXT
			FOR カウンタ,0,RITカウンタ
				컬렉션_編集:カウンタB = RITリスト:カウンタ
				カウンタB++
			NEXT
			FOR カウンタ,0,MAGカウンタ
				컬렉션_編集:カウンタB = MAGリスト:カウンタ
				カウンタB++
			NEXT
			FOR カウンタ,0,TRPカウンタ
				컬렉션_編集:カウンタB = TRPリスト:カウンタ
				カウンタB++
			NEXT

			FOR カウンタ,0,ERAカウンタ
				컬렉션_編集:カウンタB = ERAリスト:カウンタ
				カウンタB++
			NEXT
		ENDIF
	ENDIF


ELSEIF EX切り替え == 1
	VARSET カウンタB
	FOR カウンタ,150,100000
		VARSET RESULT
		VARSET RESULTS
		
		SIF カウンタ == 25000
			CALL LOADING_SCREEN_SPLIT(1)
		SIF カウンタ == 50000
			CALL LOADING_SCREEN_SPLIT(2)
		SIF カウンタ == 75000
			CALL LOADING_SCREEN_SPLIT(3)
		TRYCALLFORM CARDNAME_{カウンタ}("名前")
		SIF RESULTS == ""
			CONTINUE
		TRYCALLFORM CARD_{カウンタ}("トークン")
		SIF RESULT == 1
			CONTINUE
		CALL DECK_FILTER(カウンタ)
		SIF RESULT != 1
			CONTINUE

		VARSET RESULT
		TRYCALLFORM CARD_{カウンタ}("종류")
		IF RESULT == 융합
			FUSリスト:FUSカウンタ = カウンタ
			FUSカウンタ++
		ELSEIF RESULT == 싱크로
			SYNリスト:SYNカウンタ = カウンタ
			SYNカウンタ++
		ELSEIF RESULT == 엑시즈
			XYZリスト:XYZカウンタ = カウンタ
			XYZカウンタ++
		ELSEIF RESULT == 링크
			LINリスト:LINカウンタ = カウンタ
			LINカウンタ++
		ELSEIF RESULT == 초차원
			PSYリスト:PSYカウンタ = カウンタ
			PSYカウンタ++
		ELSE
			CONTINUE
		ENDIF
		ALLリスト:ALLカウンタ = カウンタ
		ALLカウンタ++
	NEXT
	IF ソート方式 != ""
		FOR カウンタ,0,ALLカウンタ
			IF ソート方式 == "レア度"
				CALL CARDPRICE(ALLリスト:カウンタ,"レア度")
			ELSE
				CALLFORM CARD_{ALLリスト:カウンタ},ソート方式
			ENDIF
			ALLリスト:カウンタ += RESULT * 10000000
		NEXT
		IF ソート順番 == 1
			ARRAYSORT ALLリスト,FORWARD,0,ALLカウンタ
		ELSE
			ARRAYSORT ALLリスト,BACK
		ENDIF
		FOR カウンタ,0,ALLカウンタ
			ALLリスト:カウンタ = ALLリスト:カウンタ % 10000000 
		NEXT

		FOR カウンタ,0,FUSカウンタ
			CALLFORM CARD_{FUSリスト:カウンタ},ソート方式
			FUSリスト:カウンタ += RESULT * 10000000
		NEXT
		IF ソート順番 == 1
			ARRAYSORT FUSリスト,FORWARD,0,FUSカウンタ
		ELSE
			ARRAYSORT FUSリスト,BACK
		ENDIF
		FOR カウンタ,0,FUSカウンタ
			FUSリスト:カウンタ = FUSリスト:カウンタ % 10000000 
		NEXT

		FOR カウンタ,0,SYNカウンタ
			CALLFORM CARD_{SYNリスト:カウンタ},ソート方式
			SYNリスト:カウンタ += RESULT * 10000000
		NEXT

		IF ソート順番 == 1
			ARRAYSORT SYNリスト,FORWARD,0,SYNカウンタ
		ELSE
			ARRAYSORT SYNリスト,BACK
		ENDIF
		FOR カウンタ,0,SYNカウンタ
			SYNリスト:カウンタ = SYNリスト:カウンタ % 10000000 
		NEXT

		FOR カウンタ,0,XYZカウンタ
			CALLFORM CARD_{XYZリスト:カウンタ},ソート方式
			XYZリスト:カウンタ += RESULT * 10000000
		NEXT
		IF ソート順番 == 1
			ARRAYSORT XYZリスト,FORWARD,0,XYZカウンタ
		ELSE
			ARRAYSORT XYZリスト,BACK
		ENDIF
		FOR カウンタ,0,XYZカウンタ
			XYZリスト:カウンタ = XYZリスト:カウンタ % 10000000 
		NEXT

		FOR カウンタ,0,LINカウンタ
			CALLFORM CARD_{LINリスト:カウンタ},ソート方式
			LINリスト:カウンタ += RESULT * 10000000
		NEXT
		IF ソート順番 == 1
			ARRAYSORT LINリスト,FORWARD,0,LINカウンタ
		ELSE
			ARRAYSORT LINリスト,BACK
		ENDIF

		FOR カウンタ,0,LINカウンタ
			LINリスト:カウンタ = LINリスト:カウンタ % 10000000 
		NEXT


		FOR カウンタ,0,PSYカウンタ
			CALLFORM CARD_{PSYリスト:カウンタ},ソート方式
			PSYリスト:カウンタ += RESULT * 10000000
		NEXT
		IF ソート順番 == 1
			ARRAYSORT PSYリスト,FORWARD,0,PSYカウンタ
		ELSE
			ARRAYSORT PSYリスト,BACK
		ENDIF

		FOR カウンタ,0,PSYカウンタ
			PSYリスト:カウンタ = PSYリスト:カウンタ % 10000000 
		NEXT
	ENDIF


	IF レア度グループ化 == 1
		IF 종류グループ化 == 1
			FOR カウンタ,0,ALLカウンタ
				CALL CARDPRICE(ALLリスト:カウンタ,"レア度")
				SELECTCASE RESULT
				CASE 4
					ULRリスト:ULRカウンタ = ALLリスト:カウンタ
					ULRカウンタ++
				CASE 3
					SPRリスト:SPRカウンタ = ALLリスト:カウンタ
					SPRカウンタ++
				CASE 2
					RARリスト:RARカウンタ = ALLリスト:カウンタ
					RARカウンタ++
				CASE 1
					CMNリスト:CMNカウンタ = ALLリスト:カウンタ
					CMNカウンタ++
				CASE 5
					ERAリスト:ERAカウンタ = ALLリスト:カウンタ
					ERAカウンタ++
				ENDSELECT
			NEXT
		ELSE
			FOR カウンタ,0,FUSカウンタ
				CALL CARDPRICE(FUSリスト:カウンタ,"レア度")
				SELECTCASE RESULT
				CASE 4
					ULRリスト:ULRカウンタ = FUSリスト:カウンタ
					ULRカウンタ++
				CASE 3
					SPRリスト:SPRカウンタ = FUSリスト:カウンタ
					SPRカウンタ++
				CASE 2
					RARリスト:RARカウンタ = FUSリスト:カウンタ
					RARカウンタ++
				CASE 1
					CMNリスト:CMNカウンタ = FUSリスト:カウンタ
					CMNカウンタ++
				CASE 5
					ERAリスト:ERAカウンタ = FUSリスト:カウンタ
					ERAカウンタ++
				ENDSELECT
			NEXT

			FOR カウンタ,0,SYNカウンタ
				CALL CARDPRICE(SYNリスト:カウンタ,"レア度")
				SELECTCASE RESULT
				CASE 4
					ULRリスト:ULRカウンタ = SYNリスト:カウンタ
					ULRカウンタ++
				CASE 3
					SPRリスト:SPRカウンタ = SYNリスト:カウンタ
					SPRカウンタ++
				CASE 2
					RARリスト:RARカウンタ = SYNリスト:カウンタ
					RARカウンタ++
				CASE 1
					CMNリスト:CMNカウンタ = SYNリスト:カウンタ
					CMNカウンタ++
				CASE 5
					ERAリスト:ERAカウンタ = SYNリスト:カウンタ
					ERAカウンタ++
				ENDSELECT
			NEXT
			FOR カウンタ,0,XYZカウンタ
				CALL CARDPRICE(XYZリスト:カウンタ,"レア度")
				SELECTCASE RESULT
				CASE 4
					ULRリスト:ULRカウンタ = XYZリスト:カウンタ
					ULRカウンタ++
				CASE 3
					SPRリスト:SPRカウンタ = XYZリスト:カウンタ
					SPRカウンタ++
				CASE 2
					RARリスト:RARカウンタ = XYZリスト:カウンタ
					RARカウンタ++
				CASE 1
					CMNリスト:CMNカウンタ = XYZリスト:カウンタ
					CMNカウンタ++
				CASE 5
					ERAリスト:ERAカウンタ = XYZリスト:カウンタ
					ERAカウンタ++
				ENDSELECT
			NEXT
			FOR カウンタ,0,LINカウンタ
				CALL CARDPRICE(LINリスト:カウンタ,"レア度")
				SELECTCASE RESULT
				CASE 4
					ULRリスト:ULRカウンタ = LINリスト:カウンタ
					ULRカウンタ++
				CASE 3
					SPRリスト:SPRカウンタ = LINリスト:カウンタ
					SPRカウンタ++
				CASE 2
					RARリスト:RARカウンタ = LINリスト:カウンタ
					RARカウンタ++
				CASE 1
					CMNリスト:CMNカウンタ = LINリスト:カウンタ
					CMNカウンタ++
				CASE 5
					ERAリスト:ERAカウンタ = LINリスト:カウンタ
					ERAカウンタ++
				ENDSELECT
			NEXT

			FOR カウンタ,0,PSYカウンタ
				CALL CARDPRICE(PSYリスト:カウンタ,"レア度")
				SELECTCASE RESULT
				CASE 4
					ULRリスト:ULRカウンタ = PSYリスト:カウンタ
					ULRカウンタ++
				CASE 3
					SPRリスト:SPRカウンタ = PSYリスト:カウンタ
					SPRカウンタ++
				CASE 2
					RARリスト:RARカウンタ = PSYリスト:カウンタ
					RARカウンタ++
				CASE 1
					CMNリスト:CMNカウンタ = PSYリスト:カウンタ
					CMNカウンタ++
				CASE 5
					ERAリスト:ERAカウンタ = PSYリスト:カウンタ
					ERAカウンタ++
				ENDSELECT
			NEXT
			

			FOR カウンタ,0,ULRカウンタ
				EX컬렉션_編集:カウンタB = ULRリスト:カウンタ
				カウンタB++
			NEXT
			FOR カウンタ,0,SPRカウンタ
				EX컬렉션_編集:カウンタB = SPRリスト:カウンタ
				カウンタB++
			NEXT
			FOR カウンタ,0,RARカウンタ
				EX컬렉션_編集:カウンタB = RARリスト:カウンタ
				カウンタB++
			NEXT
			FOR カウンタ,0,CMNカウンタ
				EX컬렉션_編集:カウンタB = CMNリスト:カウンタ
				カウンタB++
			NEXT
			FOR カウンタ,0,ERAカウンタ
				EX컬렉션_編集:カウンタB = ERAリスト:カウンタ
				カウンタB++
			NEXT
		ENDIF
	ELSE
		IF 종류グループ化 == 1
			FOR カウンタ,0,ALLカウンタ
				EX컬렉션_編集:カウンタB = ALLリスト:カウンタ
				カウンタB++
			NEXT
		ELSE
			FOR カウンタ,0,FUSカウンタ
				EX컬렉션_編集:カウンタB = FUSリスト:カウンタ
				カウンタB++
			NEXT
			FOR カウンタ,0,SYNカウンタ
				EX컬렉션_編集:カウンタB = SYNリスト:カウンタ
				カウンタB++
			NEXT
			FOR カウンタ,0,XYZカウンタ
				EX컬렉션_編集:カウンタB = XYZリスト:カウンタ
				カウンタB++
			NEXT
			FOR カウンタ,0,LINカウンタ
				EX컬렉션_編集:カウンタB = LINリスト:カウンタ
				カウンタB++
			NEXT

			FOR カウンタ,0,PSYカウンタ
				EX컬렉션_編集:カウンタB = PSYリスト:カウンタ
				カウンタB++
			NEXT
		ENDIF
	ENDIF
ENDIF


@DECK_SORT(ソート설정)
#DIM DYNAMIC カウンタ
#DIM DYNAMIC カウンタB
#DIM DYNAMIC 現在最小値
#DIM DYNAMIC 消去カード
#DIM DYNAMIC ソート설정

#DIM DYNAMIC 一時보존,紙束最大値
#DIM DYNAMIC EX一時보존,紙束最大値

#DIM DYNAMIC NRMリスト,紙束最大値
#DIM DYNAMIC NRMカウンタ
#DIM DYNAMIC EFFリスト,紙束最大値
#DIM DYNAMIC EFFカウンタ
#DIM DYNAMIC RITリスト,紙束最大値
#DIM DYNAMIC RITカウンタ
#DIM DYNAMIC MAGリスト,紙束最大値
#DIM DYNAMIC MAGカウンタ
#DIM DYNAMIC TRPリスト,紙束最大値
#DIM DYNAMIC TRPカウンタ

#DIM DYNAMIC FUSリスト,紙束最大値
#DIM DYNAMIC FUSカウンタ
#DIM DYNAMIC SYNリスト,紙束最大値
#DIM DYNAMIC SYNカウンタ
#DIM DYNAMIC XYZリスト,紙束最大値
#DIM DYNAMIC XYZカウンタ
#DIM DYNAMIC LINリスト,紙束最大値
#DIM DYNAMIC LINカウンタ
#DIM DYNAMIC PSYリスト,紙束最大値
#DIM DYNAMIC PSYカウンタ

VARSET 一時보존 , -1
VARSET EX一時보존 , -1


FOR カウンタ,0,紙束最大値
	VARSET 現在最小値, 999999
	FOR カウンタB,0,紙束最大値
		IF 編集_덱:カウンタB < 現在最小値 && 編集_덱:カウンタB > 0			
			現在最小値 = 編集_덱:カウンタB
			一時보존:カウンタ = 編集_덱:カウンタB
			消去カード = カウンタB
		ENDIF
	NEXT
	ARRAYREMOVE 編集_덱, 消去カード, 1
	編集_덱:(VARSIZE("編集_덱")-1) = -1
NEXT

FOR カウンタ,0,紙束最大値
	TRYCALLFORM CARD_{一時보존:カウンタ}("종류")
	IF RESULT == 通常モン
		NRMリスト:NRMカウンタ = 一時보존:カウンタ
		NRMカウンタ++
	ELSEIF RESULT == 효과モン
		EFFリスト:EFFカウンタ = 一時보존:カウンタ
		EFFカウンタ++
	ELSEIF RESULT == 의식
		RITリスト:RITカウンタ = 一時보존:カウンタ
		RITカウンタ++
	ELSEIF INRANGE(RESULT, 20, 29)
		MAGリスト:MAGカウンタ = 一時보존:カウンタ
		MAGカウンタ++
	ELSEIF RESULT >= 함정全般
		TRPリスト:TRPカウンタ = 一時보존:カウンタ
		TRPカウンタ++	
	ELSE
		CONTINUE
	ENDIF
NEXT



FOR カウンタ,0,NRMカウンタ
	編集_덱:現山札数("編集") = NRMリスト:カウンタ
NEXT
FOR カウンタ,0,EFFカウンタ
	編集_덱:現山札数("編集") = EFFリスト:カウンタ
NEXT
FOR カウンタ,0,RITカウンタ
	編集_덱:現山札数("編集") = RITリスト:カウンタ
NEXT
FOR カウンタ,0,MAGカウンタ
	編集_덱:現山札数("編集") = MAGリスト:カウンタ
NEXT
FOR カウンタ,0,TRPカウンタ
	編集_덱:現山札数("編集") = TRPリスト:カウンタ
NEXT







FOR カウンタ,0,紙束最大値
	VARSET 現在最小値, 999999
	FOR カウンタB,0,紙束最大値
		IF 編集_EX덱:カウンタB < 現在最小値 && 編集_EX덱:カウンタB > 0			
			現在最小値 = 編集_EX덱:カウンタB
			EX一時보존:カウンタ = 編集_EX덱:カウンタB
			消去カード = カウンタB
		ENDIF
	NEXT
	ARRAYREMOVE 編集_EX덱, 消去カード, 1
	編集_EX덱:(VARSIZE("編集_EX덱")-1) = -1
NEXT


FOR カウンタ,0,紙束最大値
	TRYCALLFORM CARD_{EX一時보존:カウンタ}("종류")
	IF RESULT == 융합
		FUSリスト:FUSカウンタ = EX一時보존:カウンタ
		FUSカウンタ++
	ELSEIF RESULT == 싱크로
		SYNリスト:SYNカウンタ = EX一時보존:カウンタ
		SYNカウンタ++
	ELSEIF RESULT == 엑시즈
		XYZリスト:XYZカウンタ = EX一時보존:カウンタ
		XYZカウンタ++
	ELSEIF RESULT == 링크
		LINリスト:LINカウンタ = EX一時보존:カウンタ
		LINカウンタ++
	ELSEIF RESULT == 초차원
		PSYリスト:PSYカウンタ = EX一時보존:カウンタ
		PSYカウンタ++

	ELSE
		CONTINUE
	ENDIF
NEXT


FOR カウンタ,0,FUSカウンタ
	編集_EX덱:現EX山札数("編集") = FUSリスト:カウンタ
NEXT
FOR カウンタ,0,SYNカウンタ
	編集_EX덱:現EX山札数("編集") = SYNリスト:カウンタ
NEXT
FOR カウンタ,0,XYZカウンタ
	編集_EX덱:現EX山札数("編集") = XYZリスト:カウンタ
NEXT
FOR カウンタ,0,LINカウンタ
	編集_EX덱:現EX山札数("編集") = LINリスト:カウンタ
NEXT
FOR カウンタ,0,PSYカウンタ
	編集_EX덱:現EX山札数("編集") = PSYリスト:カウンタ
NEXT



@DECK_FILTER(カードID)
#DIM DYNAMIC カードID
#DIM DYNAMIC 条件달성
#DIM DYNAMIC カウンタ
#DIM DYNAMIC カウンタB
#DIM DYNAMIC 行数カウント
#DIM DYNAMIC 行数カウント（終）
#DIM DYNAMIC 使用行数
#DIM DYNAMIC ACTIVATE 
SIF カードID == -1
	RETURN 0
IF 필터条件ワード != ""
	REDRAW 0
	検索플래그 = 1
	行数カウント = LINECOUNT
	TRYCALLFORM CARD_EXPLANATION_{カードID}
	行数カウント（終） = LINECOUNT
	使用行数 = 行数カウント（終） - 行数カウント
	FOR カウンタ,1000, (1000 - (使用行数 + 1)), -1 
		IF STRFIND(GETDISPLAYLINE(カウンタ), 필터条件ワード)  != -1
			条件달성 ++
			BREAK
		ENDIF
	NEXT
	CLEARLINE 使用行数
	VARSET 検索플래그

	VARSET RESULTS


	TRYCALLFORM CARDNAME_{カードID}, "名前"
	SIF STRFIND(RESULTS, 필터条件ワード)  != -1
		条件달성 ++
	VARSET RESULTS
	TRYCALLFORM CARDNAME_{カードID}, "略称"
	SIF STRFIND(RESULTS, 필터条件ワード)  != -1
		条件달성 ++


	VARSET RESULTS
	TRYCALLFORM CARDNAME_{カードID}, "カテゴリ"
	FOR カウンタ,0,10
		SIF STRFIND(RESULTS:カウンタ, 필터条件ワード)  != -1
			条件달성 ++
	NEXT
	VARSET RESULTS
	TRYCALLFORM CARDNAME_{カードID}, "検索カテゴリ"
	FOR カウンタ,0,10
		SIF STRFIND(RESULTS:カウンタ, 필터条件ワード)  != -1
			条件달성 ++
	NEXT
	SIF 条件달성 == 0
		RETURN 0
ENDIF
IF 필터条件カテゴリ != ""
	VARSET 条件달성
	FOR カウンタ,0,10
		TRYCALLFORM CARDNAME_{カードID}, "カテゴリ"
		SIF STRFIND(RESULTS:カウンタ, 필터条件カテゴリ)  != -1
			条件달성 ++
	NEXT
	SIF 条件달성 == 0
		RETURN 0
ENDIF
IF 필터条件종류 > 0
	VARSET 条件달성
	;PRINTL 통합니다
	TRYCALLFORM CARD_{カードID}, "종류"
	IF MATCH(필터条件종류, 10)
		SIF RESULT < 10
			条件달성 = 1
	ELSEIF MATCH(필터条件종류, 20)
		SIF INRANGE(RESULT,20,30)
			条件달성 = 1
	ELSEIF MATCH(필터条件종류, 30)	
		SIF RESULT >= 30 
			条件달성 = 1
	ELSEIF MATCH(필터条件종류, 40)
		SIF RESULT >= 20 
			条件달성 = 1
	ENDIF
	SIF MATCH(RESULT, 필터条件종류)
		条件달성 = 1
	SIF MATCH(필터条件종류, RESULT)
		条件달성 = 1
	SIF 条件달성 != 1
		RETURN 0
ENDIF

IF 필터条件속성 > 0
	TRYCALLFORM CARD_{カードID}, "속성"
	SIF !MATCH(필터条件속성, RESULT)
		RETURN 0
	SIF RESULT == 0
		RETURN 0
ENDIF
IF 필터条件종족 > 0
	TRYCALLFORM CARD_{カードID}, "종족"
	SIF !MATCH(필터条件종족, RESULT)
		RETURN 0
	SIF RESULT == 0
		RETURN 0
ENDIF
IF 필터条件レベル > 0
	TRYCALLFORM CARD_{カードID}, "レベル"
	SIF !MATCH(필터条件レベル, RESULT)
		RETURN 0
	SIF RESULT == 0
		RETURN 0
ENDIF
IF 필터条件攻撃力 > 0
	TRYCALLFORM CARD_{カードID}, "攻撃力"
	SIF RESULT > 필터条件攻撃力
		RETURN 0
ENDIF
IF 필터条件攻固撃力 > 0
	TRYCALLFORM CARD_{カードID}, "攻撃力"
	SIF RESULT != 필터条件攻固撃力
		RETURN 0
ENDIF

IF 필터条件守備力 > 0
	TRYCALLFORM CARD_{カードID}, "守備力"
	SIF RESULT > 필터条件守備力
		RETURN 0
ENDIF
IF 필터条件分割 > 0
	TRYCALLFORM CARD_{カードID}, "分割"
	SIF RESULT != 필터条件分割
		RETURN 0
ENDIF
IF 필터条件튜너 > 0
	TRYCALLFORM CARD_{カードID}, "튜너"
	SIF RESULT == 0
		RETURN 0
ENDIF
IF 필터条件성별 > 0
	IF 필터条件성별 != 3
		TRYCALLFORM CARD_{カードID}, "성별"
		SIF RESULT != 필터条件성별
			RETURN 0
	ELSE
		TRYCALLFORM CARD_{カードID}, "성별"
		SIF RESULT == 1 || RESULT == 2
			RETURN 0
	ENDIF
ENDIF

IF 필터条件화상 > 0
	SIF !ENUMFILES("RESOURCES/DUEL", @"{カードID}_DUEL.*")
		RETURN 0
ENDIF

IF 필터条件外部 > 0
	IF 필터条件外部 == 1
		TRYCALLFORM CARD_{カードID}, "외부자"
		SIF RESULT != 1
			RETURN 0
	ELSEIF 필터条件外部 == 2
		TRYCALLFORM CARD_{カードID}, "외부자"
		SIF RESULT != 0
			RETURN 0
	ENDIF
ENDIF


IF 필터条件レア度:0 > 0
	CALL CARDPRICE(カードID,"レア度")
	SIF !MATCH(필터条件レア度, RESULT)
		RETURN 0
ENDIF


IF 필터条件所持 == 0
	SIF ITEM:カードID == 0
		RETURN 0
ELSEIF 필터条件所持 == 1
	IF ITEM:カードID == 0
		TRYCALLFORM CARD_{カードID}("듀얼리스트")
		SIF RESULT == 1
			RETURN 0
		TRYCALLFORM CARD_{カードID}("生産불가")
		SIF RESULT == 1
			RETURN 0
	ENDIF
ENDIF

RETURN 1


@DECK_FILTER_RESET
;VARSET 필터条件ワード
VARSET 필터条件固名前
VARSET 필터条件カテゴリ

VARSET 필터条件종류
VARSET 필터条件속성
VARSET 필터条件종족
VARSET 필터条件レベル
VARSET 필터条件攻撃力
VARSET 필터条件攻固撃力

VARSET 필터条件守備力
VARSET 필터条件튜너
VARSET 필터条件固定
VARSET 필터条件성별
VARSET 필터条件화상
VARSET 필터条件外部
VARSET 필터条件分割
VARSET 필터条件所持
VARSET 필터条件レア度

@DECK_FILTER_ON_CHECK
SIF 필터条件固名前 != ""
	RETURN 1
SIF 필터条件カテゴリ != ""
	RETURN 1
SIF 필터条件종류 != 0
	RETURN 1
SIF 필터条件속성 != 0
	RETURN 1
SIF 필터条件종족 != 0
	RETURN 1
SIF 필터条件レベル != 0
	RETURN 1
SIF 필터条件攻撃力 != 0
	RETURN 1
SIF 필터条件攻固撃力 != 0
	RETURN 1
SIF 필터条件튜너 != 0
	RETURN 1
SIF 필터条件성별 != 0
	RETURN 1
SIF 필터条件화상 != 0
	RETURN 1
SIF 필터条件外部 != 0
	RETURN 1
RETURN 0

@SELECTDECK
#DIM DYNAMIC 選択덱
#DIM DYNAMIC カウンタ
#DIM DYNAMIC ページ開始
#DIM DYNAMIC ページ最大値

ページ最大値 = 2

$INPUT_LOOP
CUSTOMDRAWLINE ―
PRINTFORML 　덱 선택
CUSTOMDRAWLINE ―
FOR カウンタ,0 + (ページ開始 * 20) ,20 + (ページ開始 * 20)
	CALL DECK_ABLE_CHECK(カウンタ)
	SIF RESULT == 0
		SETCOLOR C_GRAY
	IF 마이덱名:カウンタ != ""
		PRINTFORM [{カウンタ,2,LEFT}] - 【%마이덱名:カウンタ%】
	ELSE
		PRINTFORM [{カウンタ,2,LEFT}] - 【마이덱({カウンタ,2})】
	ENDIF
;	PRINTL
	CALL DECK_ABLE_CHECK(カウンタ)
	IF RESULT == 0
		PRINT [듀얼사용불가]
	ELSE
		PRINT [ 대표카드 ]
	ENDIF

	VARSET RESULTS
	IF 마이덱_エース:カウンタ > 0
		TRYCALLFORM CARDNAME_{마이덱_エース:カウンタ}, "略称"
	ELSE
		TRYCALLFORM CARDNAME_{마이덱:カウンタ:0}, "略称"
	ENDIF	
	SIF RESULTS != ""
		PRINTFORM 　[%RESULTS,18,LEFT%]
	VARSET RESULTS
	IF 마이덱_アイドル:カウンタ > 0
		TRYCALLFORM CARDNAME_{마이덱_アイドル:カウンタ}, "略称"
	ELSE
		TRYCALLFORM CARDNAME_{마이덱:カウンタ:14}, "略称"
	ENDIF
	SIF RESULTS != ""
		PRINTFORM 　[%RESULTS,18,LEFT%]
	
	VARSET RESULTS
	IF 마이덱_切り札:カウンタ > 0
		TRYCALLFORM CARDNAME_{마이덱_切り札:カウンタ}, "略称"
	ELSE
		TRYCALLFORM CARDNAME_{마이덱:カウンタ:29}, "略称"
	ENDIF
	SIF RESULTS != ""
		PRINTFORM 　[%RESULTS,18,LEFT%]	
	RESETCOLOR
	PRINTL
NEXT
PRINTFORML PAGES（{ページ開始 + 1,2}/{ページ最大値 + 1,2}）―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――
SIF ページ開始 == 0
	SETCOLOR C_GRAY
PRINTBUTTON "[ ◁◁ ]",8500
RESETCOLOR
PRINTFORM %"",90%
SIF ページ開始 == ページ最大値
	SETCOLOR C_GRAY
PRINTBUTTON "[ ▷▷ ]",8501
RESETCOLOR
PRINTL 

CUSTOMDRAWLINE ―


PRINTL 
PRINTL [9999] - 돌아간다
BINPUT
選択덱 = RESULT
IF 選択덱 == 9999 
	PRINTL
	RETURN -1

ELSEIF RESULT == 8500
	ページ開始 --
	SIF ページ開始 <= 0
		ページ開始 = 0
	GOTO INPUT_LOOP
ELSEIF RESULT == 8501
	ページ開始 ++
	SIF ページ開始 >= ページ最大値
		ページ開始 = ページ最大値
	GOTO INPUT_LOOP
ELSE
	CALL HENSHU_RELOAD
	CALLFORM MYDECK("編集",選択덱)
ENDIF
RETURN 選択덱


@CARDCHECKER
#DIM DYNAMIC カウンタ
#DIM DYNAMIC カウンタB
#DIM DYNAMIC カウンタC
#DIM DYNAMIC 종족数,20
#DIM DYNAMIC EX종족数,20
#DIM DYNAMIC 종류数,20
#DIM DYNAMIC 속성数,20
#DIM DYNAMIC EX속성数,20
#DIMS DYNAMIC カード名前
#DIMS DYNAMIC 캐릭터実装
#DIMS DYNAMIC カード実装
#DIMS DYNAMIC カード화상
#DIM DYNAMIC カードID
#DIM DYNAMIC 合計
#DIM DYNAMIC パック상황, 100000
#DIMS DYNAMIC 収録상황
#DIMS DYNAMIC CARDS_STR, 100000
#DIMS DYNAMIC CARDS_STR2, 10000
#DIMS DYNAMIC CARDS_STR3, 1000
#DIMS DYNAMIC CARDS_STR4, 10000
#DIMS DYNAMIC カテゴリ名, 10000
#DIMS DYNAMIC 설정カテ, 10000
#DIM DYNAMIC 選択モード

PRINTL [1] - 종족 카운트를 시작한다
PRINTL [2] - 속성 카운트를 시작한다
PRINTL [3] - 종류 카운트를 시작한다
PRINTL [4] - 캐릭터 카드 리스트를 작성
PRINTL [5] - 덱 소지 리스트 작성
PRINTL [6] - 풀 카드리스트 작성
PRINTL [7] - ID순차 카드 리스트 작성
PRINTL [8] - 팩 수록 상태 확인
PRINTL [9] - 모든 카테고리 도감 작성

PRINTL
PRINTL [100] - 돌아간다
INPUT
IF RESULT == 1	
	FOR カウンタ,0,100000
		VARSET RESULT
		TRYCALLFORM CARD_{カウンタ}, "종류"
		SIF INRANGE(RESULT,4,10)
			CONTINUE
		TRYCALLFORM CARD_{カウンタ}, "トークン"
		SIF RESULT == 1
			CONTINUE
		VARSET RESULT
		TRYCALLFORM CARD_{カウンタ}, "종족"
		FOR カウンタB,1,20
			SIF RESULT == カウンタB
				종족数:カウンタB ++
		NEXT
	NEXT


	FOR カウンタ,0,100000
		VARSET RESULT
		TRYCALLFORM CARD_{カウンタ}, "종류"
		SIF !INRANGE(RESULT,4,10)
			CONTINUE
		TRYCALLFORM CARD_{カウンタ}, "トークン"
		SIF RESULT == 1
			CONTINUE
		VARSET RESULT
		TRYCALLFORM CARD_{カウンタ}, "종족"
		FOR カウンタB,1,20
			SIF RESULT == カウンタB
				EX종족数:カウンタB ++
		NEXT
	NEXT



	FOR カウンタB,1,20	
		SETCOLOR (0x000000 + カウンタB*1000000 + カウンタB*100000 + カウンタB*10000 + カウンタB*1000 + カウンタB*100 + カウンタB*10 + カウンタB*1) 
		PRINTFORML 【%GET_TALENTNAME(191,カウンタB),12,LEFT%】：합계{종족数:カウンタB + EX종족数:カウンタB}체
		PRINTFORML 메인：{종족数:カウンタB}체　/　EX덱：{EX종족数:カウンタB}
		RESETCOLOR
	NEXT
	PRINTFORM 【합계】:
	FOR カウンタ,1,20
		合計 += (종족数:カウンタ)
		合計 += (EX종족数:カウンタ)
	NEXT
	PRINTFORML {合計}장
ELSEIF RESULT == 2
	FOR カウンタ,0,100000
		VARSET RESULT
		TRYCALLFORM CARD_{カウンタ}, "종류"
		SIF INRANGE(RESULT,4,10)
			CONTINUE
		TRYCALLFORM CARD_{カウンタ}, "トークン"
		SIF RESULT == 1
			CONTINUE
		VARSET RESULT
		TRYCALLFORM CARD_{カウンタ}, "속성"
		FOR カウンタB,1,7
			SIF RESULT == カウンタB
				속성数:カウンタB ++
		NEXT
	NEXT


	FOR カウンタ,0,100000
		VARSET RESULT
		TRYCALLFORM CARD_{カウンタ}, "종류"
		SIF !INRANGE(RESULT,4,10)
			CONTINUE
		TRYCALLFORM CARD_{カウンタ}, "トークン"
		SIF RESULT == 1
			CONTINUE
		VARSET RESULT
		TRYCALLFORM CARD_{カウンタ}, "속성"
		FOR カウンタB,1,7
			SIF RESULT == カウンタB
				EX속성数:カウンタB ++
		NEXT
	NEXT



	FOR カウンタB,1,7
		SETCOLOR (0x000000 + カウンタB*1000000 + カウンタB*100000 + カウンタB*10000 + カウンタB*1000 + カウンタB*100 + カウンタB*10 + カウンタB*1) 
		PRINTFORML 【%GET_TALENTNAME(190,カウンタB),12,LEFT%】：합계{속성数:カウンタB + EX속성数:カウンタB}체
		PRINTFORML 메인：{속성数:カウンタB}체　/　EX덱：{EX속성数:カウンタB}
		RESETCOLOR
	NEXT
	PRINTFORM 【합계】:
	FOR カウンタ,1,20
		合計 += (속성数:カウンタ)
		合計 += (EX속성数:カウンタ)
	NEXT
	PRINTFORML {合計}장

ELSEIF RESULT == 3
	VARSET カウンタB		
		FOR カウンタ,0,100000
			VARSET RESULT
			TRYCALLFORM CARD_{カウンタ}, "종류"
			FOR カウンタB,0,10
				IF カウンタB == 1
					SIF RESULT == 1
						종류数:カウンタB ++
				ELSEIF カウンタB == 2
					SIF RESULT == 2
						종류数:カウンタB ++
				ELSEIF カウンタB == 3
					SIF RESULT == 3
						종류数:カウンタB ++
				ELSEIF カウンタB == 4
					SIF RESULT == 21
						종류数:カウンタB ++
				ELSEIF カウンタB == 5
					SIF RESULT == 22
						종류数:カウンタB ++
				ELSEIF カウンタB == 6
					SIF RESULT == 23
						종류数:カウンタB ++
				ELSEIF カウンタB == 7
					SIF RESULT == 24
						종류数:カウンタB ++
				ELSEIF カウンタB == 8
					SIF RESULT == 25
						종류数:カウンタB ++
				ELSEIF カウンタB == 9
					SIF RESULT == 31
						종류数:カウンタB ++
				ELSEIF カウンタB == 10
					SIF RESULT == 32
						종류数:カウンタB ++
				ENDIF
			NEXT
		NEXT
	FOR カウンタB,0,10
		SETCOLOR (0x000000 + カウンタB*1000000 + カウンタB*100000 + カウンタB*10000 + カウンタB*1000 + カウンタB*100 + カウンタB*10 + カウンタB*1) 
		IF カウンタB == 1
			PRINTFORM 【몬스터】
		ELSEIF カウンタB == 2
			PRINTFORM 【통상】
		ELSEIF カウンタB == 3
			PRINTFORM 【의식】
		ELSEIF カウンタB == 4
			PRINTFORM 【통상마법】
		ELSEIF カウンタB == 5
			PRINTFORM 【장착마법】
		ELSEIF カウンタB == 6
			PRINTFORM 【속공마법】
		ELSEIF カウンタB == 7
			PRINTFORM 【지속마법】
		ELSEIF カウンタB == 8
			PRINTFORM 【필드】
		ELSEIF カウンタB == 9
			PRINTFORM 【통상함정】
		ELSEIF カウンタB == 10
			PRINTFORM 【지속함정】
		ENDIF
		PRINTFORML {종류数:カウンタB}장
		RESETCOLOR
	NEXT
	カウンタB = 11
	FOR カウンタ,0,10000
		VARSET RESULT
		TRYCALLFORM CARD_{カウンタ}, "종류"
		SIF RESULT != 0
			종류数:カウンタB ++
	NEXT

	SETCOLOR (0x000000 + カウンタB*1000000 + カウンタB*100000 + カウンタB*10000 + カウンタB*1000 + カウンタB*100 + カウンタB*10 + カウンタB*1) 
	PRINTFORM 【EX카드】
	PRINTFORML {종류数:カウンタB}장
	RESETCOLOR
	PRINTFORM 【합계】:
	FOR カウンタ,1,12
		合計 += (종류数:カウンタ)
	NEXT
	PRINTFORML {合計}장


ELSEIF RESULT == 4
	
	PRINTFORML [0] - 그대로 출력

	PRINTFORML [4] - 화상이 없는 것만 모아둔다
	BINPUT
	選択モード = RESULT
	FOR カードID,1000,10000
		VARSET カード名前
		VARSET 캐릭터実装
		VARSET カード実装
		VARSET カード화상
		캐릭터実装 = 【未】
		カード実装 = 【C未】
		FOR カウンタ,1,CHARANUM
			IF NO:カウンタ == カードID
				캐릭터実装 = 【済】
				カード名前 = %NAME:カウンタ%

				BREAK
			ENDIF
		NEXT
		VARSET RESULTS
		TRYCALLFORM CARDNAME_{カードID}, "名前"
		IF RESULTS != ""
			カード実装 = 【C済】
			カード名前 = %RESULTS%
		ENDIF
		FOR カウンタ,1,CHARANUM
			IF NO:カウンタ == カードID
				IF ENUMFILES("RESOURCES/CHARA", @"{NO:カウンタ}_*") || ENUMFILES("RESOURCES/CHARA", @"%NAME:カウンタ%_*")
					カード화상 = 【画在】
				ELSEIF ENUMFILES("RESOURCES/DUEL", @"{NO:カウンタ}_*") || ENUMFILES("RESOURCES/DUEL", @"%NAME:カウンタ%_*")
					カード화상 = 【画在】						
				ELSE
					カード화상 = 【画無】
				ENDIF
				BREAK
			ENDIF
		NEXT



		IF カード名前 == ""
			캐릭터実装 = 
			カード実装 = 
			カード화상 = 
		ENDIF
		SIF 選択モード == 4 && (カード화상 == "【画在】" || カード화상 == "") 
			CONTINUE
		CARDS_STR4:カウンタC = {カードID,5}:%カード名前,40,LEFT% %캐릭터実装%　%カード実装%　%カード화상%
		PRINTFORM {カードID,5}:%カード名前,40,LEFT% %캐릭터実装%　%カード実装%
		PRINTL
		カウンタC++
	NEXT

	SAVETEXT STRJOIN(CARDS_STR4, UNICODE(0xA)), @"Deck/캐릭터리스트.txt"
	PRINTFORMW 「캐릭터리스트.txt」로 보존했습니다

ELSEIF RESULT == 5
	FOR カードID,0,CHARANUM

		VARSET カード名前
		VARSET 캐릭터実装
		VARSET カード実装

		カード実装 = 【D未】

		CALL ENEMYDECK_CHECK(カードID)
		SIF RESULT != 0
			カード実装 = 【D済】
	
		カード名前 = %NAME:カードID%
		IF カード名前 == ""
			캐릭터実装 = 
			カード実装 = 
		ENDIF
		CARDS_STR3:(カードID) = {NO:カードID,5}:%カード名前,40,LEFT% %캐릭터実装%　%カード実装%
		PRINTFORM {NO:カードID,5}:%カード名前,40,LEFT% %캐릭터実装%　%カード実装%
		PRINTL
	NEXT
	SAVETEXT STRJOIN(CARDS_STR3, UNICODE(0xA)), @"Deck/덱소지리스트.txt"
	PRINTFORMW 「덱소지리스트.txt」로 보존했습니다

ELSEIF RESULT == 6
	FOR カードID,1000,100000
		VARSET カード名前
		VARSET 캐릭터実装
		VARSET カード実装
		TRYCALLFORM CARD_{カードID}, "トークン"
		SIF RESULT == 1
			CONTINUE
		TRYCALLFORM CARD_{カードID}, "듀얼리스트"
		SIF RESULT == 1
			CONTINUE


		VARSET RESULTS
		TRYCALLFORM CARDNAME_{カードID}, "名前"
		IF RESULTS != ""
			カード名前 = %RESULTS%
			カウンタ ++
			CARDS_STR2:カウンタ = {カードID,5}:%カード名前%
		ELSE
			CONTINUE
		ENDIF

	NEXT

	SAVETEXT STRJOIN(CARDS_STR2, UNICODE(0xA)), @"Deck/풀카드리스트.txt"
	PRINTFORMW 「풀카드리스트.txt」로 보존했습니다
ELSEIF RESULT == 7
	FOR カードID,0,100000
		VARSET カード名前
		VARSET 캐릭터実装
		VARSET カード実装

		VARSET RESULTS
		TRYCALLFORM CARDNAME_{カードID}, "名前"
		IF RESULTS != ""
			カード名前 = %RESULTS%
		ENDIF
		CARDS_STR:カードID = {カードID,5}:　%カード名前,60,LEFT%
	NEXT

	SAVETEXT STRJOIN(CARDS_STR, UNICODE(0xA)), @"카드리스트.txt"
	PRINTFORMW 「카드리스트.txt」로 보존했습니다

ELSEIF RESULT == 8
	VARSET パック상황
	FOR カウンタ,0,100
		CALL CARD_PACK_NAME(カウンタ)
		SIF RESULTS == ""
			CONTINUE
		CALL SP_PACKPOOL_LOAD(カウンタ)
		FOR カウンタB,0,URプール最大値()
			SIF パック상황:(URプール:カウンタB) >= 1
				CONTINUE
			パック상황:(URプール:カウンタB) = カウンタ
		NEXT
		FOR カウンタB,0,SRプール最大値()
			SIF パック상황:(SRプール:カウンタB) >= 1
				CONTINUE
			パック상황:(SRプール:カウンタB) = カウンタ
		NEXT
		IF カウンタ <= 80
			FOR カウンタB,0,Rプール最大値()
				SIF パック상황:(Rプール:カウンタB) >= 1
					CONTINUE
				パック상황:(Rプール:カウンタB) = カウンタ
			NEXT
			FOR カウンタB,0,CMプール最大値()
				SIF パック상황:(CMプール:カウンタB) >= 1
					CONTINUE
				パック상황:(CMプール:カウンタB) = カウンタ
			NEXT
		ENDIF
	NEXT
	VARSET カウンタ
	FOR カードID,1000,100000
		VARSET カード名前
		VARSET 캐릭터実装
		VARSET カード実装
		VARSET 収録상황
		VARSET RESULTS
		
		TRYCALLFORM CARDNAME_{カードID}, "名前"
		IF RESULTS != ""		
			カード名前 = %RESULTS%
			IF パック상황:カードID == 0
				収録상황 = 収録無し
			ELSE
				CALL CARD_PACK_NAME(パック상황:カードID)
				収録상황 = %RESULTS%
			ENDIF

			TRYCALLFORM CARD_{カードID}, "トークン"
			SIF RESULT == 1
				収録상황 = トークンカード
			TRYCALLFORM CARD_{カードID}, "듀얼리스트"
			SIF RESULT == 1
				収録상황 = 듀얼리스트カード
			TRYCALLFORM CARD_{カードID}, "生産불가"
			SIF RESULT == 1
				収録상황 = 生産불가

			CARDS_STR2:カウンタ = {カードID,5}:　%カード名前,60,LEFT%　(%収録상황%)({パック상황:カードID})
			カウンタ ++
		ELSE
			CONTINUE
		ENDIF
	NEXT
	SAVETEXT STRJOIN(CARDS_STR2, UNICODE(0xA)), @"Deck/PACK카드리스트.txt"
	PRINTFORMW 「PACK카드리스트.txt」로 보존했습니다
ELSEIF RESULT == 9
	VARSET カテゴリ名

	FOR カードID,1000,100000
		VARSET 설정カテ
		VARSET RESULTS
		TRYCALLFORM CARDNAME_{カードID}, "カテゴリ"
		IF RESULTS != ""
			FOR カウンタ,0,10
				설정カテ:カウンタ = %RESULTS:カウンタ%
			NEXT
			FOR カウンタ,0,10
				SIF RESULTS:カウンタ == ""
					CONTINUE
				SIF MATCH(カテゴリ名,설정カテ:カウンタ)
					CONTINUE
				カテゴリ名:カウンタB = %설정カテ:カウンタ%
				カウンタB ++
			NEXT
		ENDIF

	NEXT
	FOR カウンタ,0,カウンタB	
		LOCALS = 【%カテゴリ名:カウンタ%】
		CARDS_STR2:カウンタ = {カウンタ,3}:　%LOCALS,60,LEFT%
	NEXT
	SAVETEXT STRJOIN(CARDS_STR2, UNICODE(0xA)), @"Deck/카테고리리스트.txt"
	PRINTFORMW 「카테고리리스트.txt」로 보존했습니다
ELSEIF RESULT == 100
	PRINTW 돌아갑니다。
ENDIF
PRINTW 



@DECK_LIST_GENERATE
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC 読込덱
#DIMS DYNAMIC DECK_STR, 300
#DIM DYNAMIC DECK_INT, 300

PRINTL [0] - 덱 데이터를 출력（Export）
PRINTL [1] - 덱 데이터를 읽어온다（Import）
PRINTL 
PRINTL 
PRINTL [4] - 리스트 출력（전원）
PRINTL 
PRINTL [10] - 돌아간다
BINPUT

IF RESULT == 0
	PRINTL 덱 이름을 입력해주세요
	INPUTS
	IF RESULTS == ""
		PRINTL 돌아갑니다
		RESTART
	ENDIF

	ARRAYCOPY @"編集_덱", "DECK_INT"
	FOR LCOUNT, 0, 60
		DECK_STR:LCOUNT = %TOSTR(DECK_INT:(LCOUNT ))%
	NEXT

	ARRAYCOPY @"編集_EX덱", "DECK_INT"
	FOR LCOUNT, 65, 80
		DECK_STR:LCOUNT = %TOSTR(DECK_INT:(LCOUNT - 65))%
	NEXT

	DECK_STR:89 = 【カード취득】
	ARRAYCOPY @"編集_덱", "DECK_INT"
	FOR LCOUNT, 90, 150
		SIF DECK_INT:(LCOUNT - 90) == -1
			CONTINUE
		DECK_STR:LCOUNT = ITEM:%TOSTR(DECK_INT:(LCOUNT - 90))% += 1
	NEXT

	ARRAYCOPY @"編集_EX덱", "DECK_INT"
	FOR LCOUNT, 155, 170
		SIF DECK_INT:(LCOUNT - 155) == -1
			CONTINUE
		DECK_STR:LCOUNT = ITEM:%TOSTR(DECK_INT:(LCOUNT - 155))% += 1
	NEXT

	DECK_STR:179 = 【編集用データ】
	ARRAYCOPY @"編集_덱", "DECK_INT"
	FOR LCOUNT, 180, 240
		IF LCOUNT == 180
			DECK_STR:LCOUNT = SETVAR @"\%듀얼리스트\%_덱:POOL_COUNT(1)", %TOSTR(DECK_INT:(LCOUNT - 180))%
		ELSE
			DECK_STR:LCOUNT = SETVAR @"\%듀얼리스트\%_덱:POOL_COUNT(0)", %TOSTR(DECK_INT:(LCOUNT - 180))%
		ENDIF
	NEXT

	ARRAYCOPY @"編集_EX덱", "DECK_INT"
	FOR LCOUNT, 245, 260
		IF LCOUNT == 245
			DECK_STR:LCOUNT = SETVAR @"\%듀얼리스트\%_EX덱:POOL_COUNT(1)", %TOSTR(DECK_INT:(LCOUNT - 245))%
		ELSE
			DECK_STR:LCOUNT = SETVAR @"\%듀얼리스트\%_EX덱:POOL_COUNT(0)", %TOSTR(DECK_INT:(LCOUNT - 245))%
		ENDIF	
	NEXT

	SAVETEXT STRJOIN(DECK_STR, UNICODE(0xA)), @"Deck/덱_%RESULTS%.txt"
	PRINTFORMW 「덱_%RESULTS%.txt」으로 보존했습니다
	RESTART
ELSEIF RESULT == 1
	PRINTL 어느 데이터를 읽어올까요？
	FOR LCOUNT, 0, ENUMFILES("Deck", "*.txt")
		;sav/を抜く
		PRINTFORML [{LCOUNT}] - %SUBSTRING(RESULTS:LCOUNT, 5)%
	NEXT
	PRINTL
	PRINTL [1000] - 돌아간다
	BINPUT

	SIF RESULT == 1000
		RESTART
	読込덱 = RESULT
	PRINTL
	PRINTL [0] - 구버전 덱 데이터를 읽어온다（V0.7이전）
	PRINTL [1] - 신버전 덱 데이터를 읽어온다
	BINPUT

	IF RESULT == 0
		SPLIT LOADTEXT(RESULTS:読込덱), UNICODE(0xA), DECK_STR
		FOR LCOUNT, 0, 40
			SETVAR @"編集_덱:{LCOUNT}", TOINT(DECK_STR:LCOUNT)
		NEXT

		FOR LCOUNT, 0, 15
			SETVAR @"編集_EX덱:{LCOUNT}", TOINT(DECK_STR:(LCOUNT + 45))
		NEXT
	ELSEIF RESULT == 1
		SPLIT LOADTEXT(RESULTS:読込덱), UNICODE(0xA), DECK_STR
		FOR LCOUNT, 0, 60
			SETVAR @"編集_덱:{LCOUNT}", TOINT(DECK_STR:LCOUNT)
		NEXT

		FOR LCOUNT, 0, 15
			SETVAR @"編集_EX덱:{LCOUNT}", TOINT(DECK_STR:(LCOUNT + 65))
		NEXT
	ENDIF

	PRINTW 덱을 불러왔습니다
	RESTART


ELSEIF RESULT == 4
	CALL DECK_LIST_GENERATE_ALL
ELSEIF RESULT == 10
	RETURN 0
ENDIF



@GENERATE_ALL_CARDS(설정플래그)
#DIM DYNAMIC 설정플래그
#DIM DYNAMIC カウンタ
SIF 설정플래그 == 2
	GOTO INPUT_REMOVAL

FOR カウンタ,200,100000
	VARSET RESULT
	VARSET RESULTS
	TRYCALLFORM CARDNAME_{カウンタ}("名前")
	IF RESULTS == "" && カウンタ >= 1000
		;Anonym修正
		SIF ITEM:カウンタ != 0
			ITEM:カウンタ = 0
		CONTINUE
	ENDIF

	TRYCALLFORM CARD_{カウンタ}("トークン")
	SIF RESULT == 1
		CONTINUE

	IF 설정플래그 == 1
		TRYCALLFORM CARDNAME_{カウンタ}("カテゴリ")
		SIF RESULTS == "듀얼리스트"
			CONTINUE
		TRYCALLFORM CARD_{カウンタ}("生産불가")
		SIF RESULT == 1
			CONTINUE
	ENDIF

	VARSET RESULT
	TRYCALLFORM CARD_{カウンタ}("종류")
	IF RESULT != 0
		ITEM:カウンタ = 3
	ELSE
		CONTINUE
	ENDIF
NEXT
$INPUT_REMOVAL
FOR カウンタ,200,100000
	VARSET RESULT
	VARSET RESULTS
	TRYCALLFORM CARDNAME_{カウンタ}("名前")
	SIF RESULTS == ""
		CONTINUE
	TRYCALLFORM CARD_{カウンタ}("トークン")
	SIF RESULT == 1
		CONTINUE
	TRYCALLFORM CARD_{カウンタ}("종류")
	IF RESULT != 0
		
		IF 설정플래그 == 2
			ITEM:カウンタ = 0
		ELSE
			SIF ITEM:カウンタ >= 3
				ITEM:カウンタ = 3
		ENDIF
	ELSE
		CONTINUE
	ENDIF
NEXT

;禁止制限チェック――――――――――――――――――――――――――――――――――――――――――――――――
@CARD_RESTRICTION_CHECK(カードID)
#DIM DYNAMIC カードID


SIF カードID <= 0
	RETURN 0

TRYCALLFORM CARDNAME_{カードID}("名前")
SELECTCASE RESULTS
	;制限――――――――――――――――――――――――――――――――――――――――――――――――
	CASE "죽은 자의 소생"
		RETURN 1
	CASE "브릴리언트 퓨전"
		RETURN 1
	CASE "이차원으로부터의 귀환"
		RETURN 1
	CASE "태풍"
		RETURN 1
	CASE "해피의 깃털"
		RETURN 1
	CASE "카드 파괴"
		RETURN 1
	CASE "원 포 원"
		RETURN 1
	CASE "여섯 무사의 문"
		RETURN 1
	CASE "봉인의 황금궤"
		RETURN 1
	CASE "어리석은 매장"
		RETURN 1
	CASE "욕망과 졸부의 항아리"
		RETURN 1
	CASE "욕망과 탐욕의 항아리"
		RETURN 1
	CASE "테라포밍"
		RETURN 1
	CASE "증원"
		RETURN 1
	CASE "조원"
		RETURN 1

	CASE "봉인된 엑조디아"
		RETURN 1
	CASE "봉인된 자의 왼쪽 팔"
		RETURN 1
	CASE "봉인된 자의 오른쪽 팔"
		RETURN 1
	CASE "봉인된 자의 왼쪽 다리"
		RETURN 1
	CASE "봉인된 자의 오른쪽 다리"
		RETURN 1
	CASE "일세괴＝페를레이노"
		RETURN 1
	CASE "티아라멘츠 키토칼로스"
		RETURN 1
	CASE "티아라멘츠 레이노하트"
		RETURN 1
	CASE "데먼스미스 트락투스"
		RETURN 1
	CASE "아스트로그래프 매지션"
		RETURN 1
	CASE "육세괴＝파라이조스"
		RETURN 1
	CASE "팬텀 오브 유벨"
		RETURN 1
	CASE "페어리테일－백설"
		RETURN 1
	CASE "전설의 금단 도킨담X"
		RETURN 1
	CASE "나이트메어 쓰론"
		RETURN 1
	CASE "마법족의 마을"
		RETURN 1
	CASE "PSY프레임기어 감마"
		RETURN 1
	CASE "PSY프레임로드 오메가"
		RETURN 1
	CASE "천배룡 츈도라"
		RETURN 1
	CASE "배만의 찬환장"
		RETURN 1
	CASE "비스테드 마그나무트"
		RETURN 1
	;準制限――――――――――――――――――――――――――――――――――――――――――――――――
	CASE "디멘션 어트랙터"
		RETURN 2
	CASE "초융합"
		RETURN 2
	CASE "무덤의 지명자"
		RETURN 2
	CASE "십이수 모르모래트"
		RETURN 2
	CASE "낙인융합"
		RETURN 2
	CASE "크샤트리라 펜리르"
		RETURN 2
	CASE "어리석은 부장"
		RETURN 2
	CASE "비스테드 드루이드브룸"
		RETURN 2
	CASE "마를 새기는 데먼스미스"
		RETURN 2
ENDSELECT

;Anonym추가
TRYCALLFORM CARD_{カードID}("制限")
IF RESULT != 0
	RETURN RESULT
ENDIF

RETURN 0

;投入制限チェック――――――――――――――――――――――――――――――――――――――――――――――――
@DECK_ABLE_CHECK(選択덱番号)
#DIM DYNAMIC 選択덱番号
#DIM DYNAMIC 덱内枚数
#DIM DYNAMIC カードID
#DIM DYNAMIC カウンタ
#DIM DYNAMIC カウンタB
#DIM DYNAMIC 条件달성
#DIM DYNAMIC 条件合致数


SIF 마이덱:選択덱番号:29 <= 0
	RETURN 0
FOR カウンタ, 0, 60
	VARSET 덱内枚数
	カードID = 마이덱:選択덱番号:カウンタ
	SIF カードID <= 0
		CONTINUE
	VARSET RESULTS
	TRYCALLFORM CARDNAME_{カードID}("名前")
	SIF RESULTS == ""
		RETURN 0
	FOR カウンタB, 0, 30
		IF カードID == 마이덱:選択덱番号:カウンタB
			덱内枚数 ++
		ENDIF
	NEXT
	IF 덱内枚数 > ITEM:カードID
		RETURN 0
	ENDIF
NEXT

FOR カウンタ, 0, 15
	VARSET 덱内枚数
	カードID = マイEX덱:選択덱番号:カウンタ
	SIF カードID <= 0
		CONTINUE
	FOR カウンタB, 0, 15
		IF カードID == マイEX덱:選択덱番号:カウンタB
			덱内枚数 ++
		ENDIF
	NEXT
	IF 덱内枚数 > ITEM:カードID
		RETURN 0
	ENDIF
NEXT




VARSET 条件合致数
FOR カウンタ, 0, 60
	カードID = 마이덱:選択덱番号:カウンタ
	IF 효과条件名前 != ""
		VARSET 条件달성
		TRYCALLFORM CARDNAME_{カードID}, "名前"
		SIF !MATCH(효과条件名前, RESULTS)
			CONTINUE
	ENDIF
	IF 효과条件カテゴリ != ""
		VARSET 条件달성
		TRYCALLFORM CARDNAME_{カードID}, "カテゴリ"
		IF MATCH(RESULTS, 효과条件カテゴリ)
			条件달성 ++
		ENDIF
		IF MATCH(효과条件カテゴリ, RESULTS)
			条件달성 ++
		ENDIF
		SIF 条件달성 == 0
			CONTINUE
	ENDIF
	IF 효과条件종류 > 0
		TRYCALLFORM CARD_{カードID}, "종류"
		IF 효과条件종류 == モン全般
			SIF RESULT > モン全般
				CONTINUE
		ELSEIF 효과条件종류 == EXモン全般
			SIF !GROUPMATCH(RESULT, 융합, 싱크로, 엑시즈, 링크)
				CONTINUE
		ELSEIF 효과条件종류 == 링크以外
			SIF RESULT == 링크
				CONTINUE
		ELSEIF 효과条件종류 == 싱크로以外
			SIF RESULT == 싱크로
				CONTINUE
		ELSEIF 효과条件종류 == 효과全般
			VARSET 条件달성
			SIF RESULT == 通常モン
				条件달성 ++
			TRYCALLFORM CARD_{カードID}, "分割"
			SIF RESULT == 通常モン
				条件달성 ++
			SIF 条件달성 != 0
				CONTINUE
		ELSEIF 효과条件종류 == 효과無し全般
			VARSET 条件달성
			SIF RESULT == 通常モン
				条件달성 ++
			TRYCALLFORM CARD_{カードID}, "分割"
			SIF RESULT == 通常モン
				条件달성 ++
			SIF 条件달성 == 0
				CONTINUE
		ELSEIF 효과条件종류 == 마법全般
			SIF !INRANGE(RESULT, 20, 29) 
				CONTINUE
		ELSEIF 효과条件종류 == 함정全般
			SIF RESULT < 함정全般
				CONTINUE
		ELSEIF 효과条件종류 == 마함全般
			SIF RESULT <= 20
				CONTINUE	
		ELSE
			VARSET 条件달성
			SIF MATCH(효과条件종류, RESULT)
				条件달성 ++
			SIF MATCH(RESULT, 효과条件종류)
				条件달성 ++
			SIF 条件달성 == 0
				CONTINUE
		ENDIF
	ENDIF
	IF 효과条件속성 > 0
		TRYCALLFORM CARD_{カードID}, "속성"
		SIF !MATCH(효과条件속성, RESULT)
			CONTINUE
	ENDIF
	IF 효과条件종족 > 0
		TRYCALLFORM CARD_{カードID}, "종족"
		SIF !MATCH(효과条件종족, RESULT)
			CONTINUE
	ENDIF
	IF 효과条件レベル > 0
		TRYCALLFORM CARD_{カードID}, "レベル"
		SIF !MATCH(효과条件レベル, RESULT)
			CONTINUE
	ENDIF
	IF 효과条件攻撃力 > 0
		TRYCALLFORM CARD_{カードID}, "攻撃力"
		SIF RESULT > 효과条件攻撃力
			CONTINUE
	ENDIF
	IF 효과条件固攻撃力 >= 0
		TRYCALLFORM CARD_{カードID}, "攻撃力"
		SIF RESULT != 효과条件固攻撃力
			CONTINUE
	ENDIF
	IF 효과条件守備力 > 0
		TRYCALLFORM CARD_{カードID}, "守備力"
		SIF RESULT > 효과条件守備力
			CONTINUE
	ENDIF
	IF 효과条件튜너 > 0
		TRYCALLFORM CARD_{カードID}, "튜너"
		SIF RESULT != 효과条件튜너
			CONTINUE
	ENDIF
	IF 효과条件성별 > 0
		TRYCALLFORM CARD_{カードID}, "성별"
		IF 효과条件성별 == 牝性
			SIF !GETBIT(RESULT,0)
				CONTINUE
		ELSEIF 효과条件성별 == 雄性
			SIF !GETBIT(RESULT,1)
				CONTINUE
		ELSE
			SIF !MATCH(RESULT, 효과条件성별)
				CONTINUE
		ENDIF
	ENDIF
	条件合致数 ++
NEXT

FOR カウンタ, 0, 15
	カードID = マイEX덱:選択덱番号:カウンタ
	IF 효과条件名前 != ""
		VARSET 条件달성
		TRYCALLFORM CARDNAME_{カードID}, "名前"
		SIF !MATCH(효과条件名前, RESULTS)
			CONTINUE
	ENDIF
	IF 효과条件カテゴリ != ""
		VARSET 条件달성
		TRYCALLFORM CARDNAME_{カードID}, "カテゴリ"
		IF MATCH(RESULTS, 효과条件カテゴリ)
			条件달성 ++
		ENDIF
		IF MATCH(효과条件カテゴリ, RESULTS)
			条件달성 ++
		ENDIF
		SIF 条件달성 == 0
			CONTINUE
	ENDIF
	IF 효과条件종류 > 0
		TRYCALLFORM CARD_{カードID}, "종류"
		IF 효과条件종류 == モン全般
			SIF RESULT > モン全般
				CONTINUE
		ELSEIF 효과条件종류 == EXモン全般
			SIF !GROUPMATCH(RESULT, 융합, 싱크로, 엑시즈, 링크)
				CONTINUE
		ELSEIF 효과条件종류 == 링크以外
			SIF RESULT == 링크
				CONTINUE
		ELSEIF 효과条件종류 == 싱크로以外
			SIF RESULT == 싱크로
				CONTINUE
		ELSEIF 효과条件종류 == 효과全般
			VARSET 条件달성
			SIF RESULT == 通常モン
				条件달성 ++
			TRYCALLFORM CARD_{カードID}, "分割"
			SIF RESULT == 通常モン
				条件달성 ++
			SIF 条件달성 != 0
				CONTINUE
		ELSEIF 효과条件종류 == 효과無し全般
			VARSET 条件달성
			SIF RESULT == 通常モン
				条件달성 ++
			TRYCALLFORM CARD_{カードID}, "分割"
			SIF RESULT == 通常モン
				条件달성 ++
			SIF 条件달성 == 0
				CONTINUE
		ELSEIF 효과条件종류 == 마법全般
			SIF !INRANGE(RESULT, 20, 29) 
				CONTINUE
		ELSEIF 효과条件종류 == 함정全般
			SIF RESULT < 함정全般
				CONTINUE
		ELSEIF 효과条件종류 == 마함全般
			SIF RESULT <= 20
				CONTINUE	
		ELSE
			VARSET 条件달성
			SIF MATCH(효과条件종류, RESULT)
				条件달성 ++
			SIF MATCH(RESULT, 효과条件종류)
				条件달성 ++
			SIF 条件달성 == 0
				CONTINUE
		ENDIF
	ENDIF
	IF 효과条件속성 > 0
		TRYCALLFORM CARD_{カードID}, "속성"
		SIF !MATCH(효과条件속성, RESULT)
			CONTINUE
	ENDIF
	IF 효과条件종족 > 0
		TRYCALLFORM CARD_{カードID}, "종족"
		SIF !MATCH(효과条件종족, RESULT)
			CONTINUE
	ENDIF
	IF 효과条件レベル > 0
		TRYCALLFORM CARD_{カードID}, "レベル"
		SIF !MATCH(효과条件レベル, RESULT)
			CONTINUE
	ENDIF
	IF 효과条件攻撃力 > 0
		TRYCALLFORM CARD_{カードID}, "攻撃力"
		SIF RESULT > 효과条件攻撃力
			CONTINUE
	ENDIF
	IF 효과条件固攻撃力 >= 0
		TRYCALLFORM CARD_{カードID}, "攻撃力"
		SIF RESULT != 효과条件固攻撃力
			CONTINUE
	ENDIF
	IF 효과条件守備力 > 0
		TRYCALLFORM CARD_{カードID}, "守備力"
		SIF RESULT > 효과条件守備力
			CONTINUE
	ENDIF
	IF 효과条件튜너 > 0
		TRYCALLFORM CARD_{カードID}, "튜너"
		SIF RESULT != 효과条件튜너
			CONTINUE
	ENDIF
	IF 효과条件성별 > 0
		TRYCALLFORM CARD_{カードID}, "성별"
		IF 효과条件성별 == 牝性
			SIF !GETBIT(RESULT,0)
				CONTINUE
		ELSEIF 효과条件성별 == 雄性
			SIF !GETBIT(RESULT,1)
				CONTINUE
		ELSE
			SIF !MATCH(RESULT, 효과条件성별)
				CONTINUE
		ENDIF
	ENDIF
	条件合致数 ++
NEXT


IF 投入要求枚数 > 0 && 投入要求枚数 <= 条件合致数
	RETURN 1
ELSEIF 投入要求枚数 > 0 && 投入要求枚数 > 条件合致数
	RETURN 0
ELSEIF 投入禁止枚数 > 0 && 投入禁止枚数 <= 条件合致数
	RETURN 0
ELSEIF 投入禁止枚数 > 0 && 投入禁止枚数 > 条件合致数
	RETURN 1
ENDIF

RETURN 1



@DECK_LIST_GENERATE_ALL
#DIM DYNAMIC LCOUNT
#DIMS DYNAMIC DECK_STR,100
#DIM DYNAMIC DECK_INT, 100
#DIM DYNAMIC 캐릭터_ID
#DIMS DYNAMIC 덱先頭
#DIMS DYNAMIC 덱名
SAVETEXT STRJOIN(DECK_STR, UNICODE(0xA)), @"Decklist/開発用です.txt"


FOR 캐릭터_ID,1,CHARANUM
	;개편덱확인（CFLAG:729)：最低限덱として成立しているという플래그설정
	IF CFLAG:캐릭터_ID:개편덱확인 < 1
			CONTINUE
	ELSE
		CALLFORM DUELDECK_CFLAG("編集",캐릭터_ID)
	ENDIF
	덱先頭 = @DUELDECK_{NO:캐릭터_ID} (듀얼리스트)
	DECK_STR:0 = %덱先頭%
	DECK_STR:1 = #DIMS DYNAMIC 듀얼리스트
	DECK_STR:3 = RESULTS = %CALLNAME:캐릭터_ID%
	DECK_STR:5 = SIF 듀얼리스트 == "存在確認"
	DECK_STR:6 =     RETURN 1

	ARRAYCOPY @"編集_덱", "DECK_INT"
	FOR LCOUNT, 8, 48
		IF LCOUNT == 8
			DECK_STR:LCOUNT = SETVAR @"\%듀얼리스트\%_덱:POOL_COUNT(1)", %TOSTR(DECK_INT:(LCOUNT - 8))%
		ELSE
			DECK_STR:LCOUNT = SETVAR @"\%듀얼리스트\%_덱:POOL_COUNT(0)", %TOSTR(DECK_INT:(LCOUNT - 8))%
		ENDIF
	NEXT

	ARRAYCOPY @"編集_EX덱", "DECK_INT"
	FOR LCOUNT, 53, 67
		IF LCOUNT == 53
			DECK_STR:LCOUNT = SETVAR @"\%듀얼리스트\%_EX덱:POOL_COUNT(1)", %TOSTR(DECK_INT:(LCOUNT - 52))%
		ELSE
			DECK_STR:LCOUNT = SETVAR @"\%듀얼리스트\%_EX덱:POOL_COUNT(0)", %TOSTR(DECK_INT:(LCOUNT - 53))%
		ENDIF	
	NEXT

	CLEARLINE LINECOUNT
	FOR LCOUNT, 0, 100
		PRINTFORML %DECK_STR:LCOUNT%
	NEXT
	덱名 = {NO:캐릭터_ID}_%CALLNAME:캐릭터_ID%
	OUTPUTLOG @"Decklist/%덱名%.ERB",1
	PRINTFORMW 「%덱名%.ERB」로 보존했습니다
NEXT



@GET_HENSHUDECK(選択덱)
#DIM DYNAMIC 選択덱
#DIM DYNAMIC カードID
#DIM DYNAMIC カウンタ

FOR カウンタ,0,紙束最大値
	カードID = 마이덱:選択덱:カウンタ
	SIF カードID <= 0
		CONTINUE
	ITEM:カードID += 1
NEXT

FOR カウンタ,0,紙束最大値
	カードID = マイEX덱:選択덱:カウンタ
	SIF カードID <= 0
		CONTINUE
	ITEM:カードID += 1
NEXT
